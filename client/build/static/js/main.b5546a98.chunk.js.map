{"version":3,"sources":["components/plot/src/plot/utils/functions.js","components/plot/src/plot/Results.js","components/plot/index.js","components/plot/src/plot/parts/AxisX.js","components/plot/src/plot/parts/AxisY.js","components/plot/src/plot/parts/Legend.js","components/plot/src/plot/parts/Static_Line.js","components/plot/src/plot/parts/Pointer_Line.js","components/plot/src/plot/parts/Info_Box.js","components/plot/src/plot/parts/Area_Path.js","components/plot/src/plot/parts/Plot.js","components/plot/src/plot/KeywordPlot.js","components/plot/src/plot/utils/config.js","components/plot/src/plot/index.js","components/plot/src/index.js","states.js","components/Input.js","App.js","serviceWorker.js","index.js"],"names":["get_random_colors","number","slice","get_box_height","scale_data_area_dates","data","ranges","width","height","prefix","result","x_frame","Math","abs","max_x","min_x","y_frame","max_y","min_y","i","length","push","scale_data_mocks","scaled_data_mocks_area_DATES","scaled_data_mocks_area_future_DATES","number_of_plots","historical_data","forecasted_data","get_data_map_area_DATES","data_mocks_area_DATES","number_of_series","concat","data_map_area_DATES","data_length","date","y_data_normal","y_data_min","y_data_max","j","capitalizeString","string","str","splitStr","toLowerCase","split","charAt","toUpperCase","substring","join","titleCase","get_min_value","min_result","get_max_value","max_result","Component","module","exports","require","AxisX","props","ticks","data_mock","title","y_trans","ticks_number","Object","keys","data_frame","floor","frame","point","make_x_tick","key","x","className","textAnchor","y","formatDate_yearly","formatDate_monthly","line","height_trans","d","fill","data-z-index","prepare_x_axis","this","dimensions","dates","x_label","y_trans_bottom","React","PureComponent","Date","mm","getMonth","getFullYear","AxisY","upper_index","upper_bound","lower_index","lower_bound","lines_number","make_y_tick","transform","x_trans","y_label","make_yy_tick","get_y_ticks","y_number","value","Legend","colors","keywords","legend","keyword_sizes","svg_width","l","calculate_translate_for_legend","translation","reduce","a","b","stroke","strokeWidth","fontSize","width_trans","trans","max","stroke-width","font-size","class","prepare_legend","keyword_length","Static_Line","historical_data_length","strokeDasharray","get_static_line","Pointer_Line","mark_line","pos","visibility","Info_Box","info_box","box_width","box_height","y_data","undefined","value_y","opacity","toFixed","dd","getDate","yyyy","formatDate","value_x","pos_x","pos_y","get_info_box","Area_Path","style","area_path","color","svgPath","points","command","dash","acc","bezierCommand","pointerEvents","areaPath","d1","bezierCommand_upper","d3","reverse","bezierCommand_lower","lineCommand","controlPoint","current","previous","next","o","pointA","pointB","lengthX","lengthY","sqrt","pow","angle","atan2","PI","cos","sin","cps","cpe","controlPoint_upper","controlPoint_lower","line_lower","line_upper","Plot","KeywordPlot","handleMouseMove","bind","handleHoverOff","updateWindowDimensions","window","innerWidth","plot_settings","divRef","createRef","ceil","state","scaled_data","info_box_height","forecasted_data_length","addEventListener","focus","removeEventListener","clientWidth","sizes","get_dimensions","x_trans_left","x_trans_right","y_trans_up","plot_width","plot_height","setState","event","dim","target","getBoundingClientRect","clientX","left","clientY","top","x_diff","round","left_index","right_index","area_paths","map","entity","index","area_paths_future","v_b","v_trans","aa","bb","calc_y_number","results","console","log","ref","version","xmlns","preserveAspectRatio","onMouseMove","onMouseLeave","viewBox","useState","display","aria-busy","createElement","defaultProps","type","visible","timeout","USA_STATES","sort","localeCompare","time_frames","InputComponent","handleClick","handleChange","selectedState","selectedTimeFrame","selected_state_name","selected_time_frame","preventDefault","arrayTrim","callbackFromParent","errorTimeframeCallback","array","el","trim","namesList","time_frame","Form","onSubmit","Group","htmlFor","Control","placeholder","onChange","id","as","Button","variant","App","fetchCallback","displayResults","region_state","fetchData","errorCallback","message","displayError","error_message","setTimeout","mapCallback","username","fetching_results","time","myRef","fetch","method","headers","body","JSON","stringify","then","res","json","offsetWidth","get_data2","div_height","catch","error","Input","keyword","k_w","arr","valueOf","L_B","U_B","M_A","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5546a98.chunk.js","sourcesContent":["\r\n\r\nexport function add(a, b){\r\n    return a + b;\r\n}\r\n\r\n// get random int\r\nexport function get_random(min, max){\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n//get random double\r\nexport function get_random_double(min, max){\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\r\n    let result = [];\r\n\r\n    for (let i=0;i< size; i++){\r\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\r\n    let result = [];\r\n\r\n    for (let i=0;i< size; i++){\r\n        let y = get_random(min_y, max_y);\r\n        result.push([i, y - s_dev, y + s_dev, y])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function scale_data(data, ranges ,width, height){\r\n    let result = [];\r\n\r\n    let x_diff = ranges.max_x - ranges.min_x;\r\n    let y_diff = ranges.max_y - ranges.min_y;\r\n\r\n    let x_frame = width/x_diff;\r\n    let y_frame = height/y_diff;\r\n\r\n    for (let i=0; i<data.length; i++){\r\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function scale_area_data(area_data, ranges, width, height){\r\n    let result = [];\r\n\r\n    let x_diff = ranges.max_x - ranges.min_x;\r\n    let y_diff = ranges.max_y - ranges.min_y;\r\n\r\n    let x_frame = width/x_diff;\r\n    let y_frame = height/y_diff;\r\n\r\n    for (let i=0; i<area_data.length; i++){\r\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\n/////////////\r\n// MOCKED DATA\r\n\r\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\r\n    let result = [];\r\n\r\n    for (let i=min_x; i<=max_x; i++){\r\n        result.push([i, get_random(min_y, max_y)])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\n// /// RANDOM COLOR\r\n// export function random_rgba() {\r\n//     var o = Math.round, r = Math.random, s = 123;\r\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\r\n// }\r\n\r\n\r\nexport function get_random_colors(number) {\r\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\r\n\r\n    return colors.slice(0, number);\r\n}\r\n\r\nexport function get_box_height(number){\r\n    if (number === 0){\r\n        return 0;\r\n    }\r\n    return 25*(number + 1) + 10;\r\n}\r\n\r\n\r\n///////////////////////////////\r\n// MOCKED DATA with DATES\r\n\r\n\r\nexport function get_random_mock_array_dates(dates, min_y, max_y){\r\n    let result = [];\r\n\r\n    for (let i=0; i<dates.length; i++){\r\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n// export function get_random_mock_array_area_dates(dates, min_y, max_y){\r\n//     let result = [];\r\n//     let std\r\n\r\n//     for (let i=0; i<dates.length; i++){\r\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\r\n//     }\r\n\r\n//     return result;\r\n// }\r\n\r\nexport function scale_data_dates(data, ranges ,width, height){\r\n    let result = [];\r\n\r\n    let x_diff = ranges.max_x - ranges.min_x;\r\n    let y_diff = ranges.max_y - ranges.min_y;\r\n\r\n    let x_frame = width/x_diff;\r\n    let y_frame = height/y_diff;\r\n\r\n    for (let i=0; i<data.length; i++){\r\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\r\n    let result = [];\r\n    let x_diff = Math.abs(ranges.max_x - ranges.min_x);\r\n    let y_diff = Math.abs(ranges.max_y - ranges.min_y);\r\n    \r\n    let x_frame = width/(x_diff - 1);\r\n    let y_frame = height/y_diff;\r\n\r\n    for (let i=0; i<data.length; i++){\r\n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y), height - data[i][3] * y_frame + y_frame*(ranges.min_y), height - data[i][4] * y_frame + y_frame*(ranges.min_y)])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\r\n    let result = [];\r\n    \r\n\r\n\r\n\r\n    for (let i=0; i<dates.length; i++){\r\n        let s_d1 = get_random(2,8);\r\n        let s_d2 = get_random(2,8);\r\n        let random = get_random(min_y, max_y);\r\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\r\n    let result = []\r\n\r\n    for(let i=0;i<number;i++){\r\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nexport function scale_data_mocks(data, ranges, width, height){\r\n    let scaled_data_mocks_area_DATES = []\r\n    let scaled_data_mocks_area_future_DATES = []\r\n\r\n    let number_of_plots = data.historical_data.length\r\n\r\n    for (let i=0; i<number_of_plots; i++){\r\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data.historical_data[i], ranges, width, height));\r\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data.forecasted_data[i], ranges, width,  height, data.historical_data[i].length - 1));\r\n    }\r\n\r\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\r\n}\r\nexport function get_data_map_area_DATES(data) {\r\n    \r\n    let data_mocks_area_DATES = [];\r\n    let number_of_series = data.historical_data.length;\r\n    \r\n    for(let i=0;i<number_of_series;i++){\r\n        data_mocks_area_DATES.push(data.historical_data[i].concat(data.forecasted_data[i]))\r\n    }\r\n\r\n    let data_map_area_DATES = [];\r\n    \r\n    let counter = 0;\r\n    let data_length = data_mocks_area_DATES[0].length;\r\n\r\n    for(let i = 0; i<data_length; i++) {\r\n    // for(let i = 0; i<array_length_dates -2; i++) {\r\n        let y_data_normal = [];\r\n        let y_data_min = [];\r\n        let y_data_max = [];\r\n        let date;\r\n      \r\n        date = data_mocks_area_DATES[0][i][1]\r\n      \r\n        for(let j=0; j<number_of_series; j++) {\r\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\r\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\r\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\r\n        }\r\n      \r\n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\r\n    }\r\n\r\n    return data_map_area_DATES;\r\n}\r\n\r\nexport function capitalizeString(string) {\r\n    return titleCase(string);\r\n}\r\n\r\nfunction titleCase(str) {\r\n    var splitStr = str.toLowerCase().split(' ');\r\n    for (var i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \r\n    }\r\n    return splitStr.join(' '); \r\n }\r\n\r\n// export function get_historical_dates(){\r\n//     let dates = []\r\n//     dates.push(Date.UTC(2010, 0, 18))\r\n//     dates.push(Date.UTC(2010, 1, 18))\r\n//     dates.push( Date.UTC(2010, 2, 18))\r\n//     dates.push(Date.UTC(2010, 3, 18))\r\n//     dates.push( Date.UTC(2010, 4, 18))\r\n//     dates.push( Date.UTC(2010, 5, 18))\r\n//     dates.push( Date.UTC(2010, 6, 18))\r\n//     dates.push( Date.UTC(2010, 7, 18))\r\n//     // dates.push(Date.UTC(2010, 8, 18))\r\n//     // dates.push( Date.UTC(2010, 9, 18))\r\n//     // dates.push( Date.UTC(2010, 10, 18))\r\n    \r\n//     return dates;\r\n// }\r\n\r\n// export function get_forecasted_dates(){\r\n//     let dates = []\r\n//     // dates.push( Date.UTC(2010, 7, 18))\r\n//     dates.push(Date.UTC(2010, 8, 18))\r\n//     dates.push( Date.UTC(2010, 9, 18))\r\n\r\n//     return dates;\r\n\r\n// }\r\n\r\nexport function get_min_value(data){\r\n    let min_result = 100;\r\n\r\n    for(let i=0; i<data.length; i++){\r\n        for(let j=0;j<data[i].length-2; j++){\r\n            if(data[i][j][3]!==null && data[i][j][3] < min_result){\r\n                min_result = data[i][j][3]\r\n            }\r\n        }\r\n    }\r\n    return min_result\r\n}\r\n\r\nexport function get_max_value(data){\r\n    let max_result = 0;\r\n\r\n    for(let i=0; i<data.length; i++){\r\n        for(let j=0;j<data[i].length-2; j++){\r\n            if(data[i][j][4]!==null && data[i][j][4] > max_result){\r\n                max_result = data[i][j][4]\r\n            }\r\n        }\r\n    }\r\n    \r\n    return max_result\r\n}","import React, { Component } from 'react';\r\n\r\nclass Results extends Component {\t\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: this.props.data,\r\n      // keywords: this.props.keywords,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.data)\r\n    return (\r\n      <div className=\"header\">\r\n\r\n      </div>\r\n\t\t);\r\n  }\r\n}\r\n\r\n\r\nfunction formatDate(d)\r\n {\r\n  let date = new Date(d)\r\n  var dd = date.getDate(); \r\n  var mm = date.getMonth()+1;\r\n  var yyyy = date.getFullYear(); \r\n  if(dd<10){dd='0'+dd} \r\n  if(mm<10){mm='0'+mm};\r\n  return d = dd+'-'+mm+'-'+yyyy\r\n}\r\n\r\nexport default Results","module.exports = require('./src/index');","import React from 'react';\r\n\r\nexport class AxisX extends React.PureComponent {\t\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <g>\r\n        { prepare_x_axis(this.props.dimensions.width, this.props.dimensions.height, this.props.ticks, this.props.dates, this.props.x_label, this.props.dimensions.y_trans_bottom) }\r\n      </g>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AxisX\r\n\r\n\r\n\r\nfunction make_x_tick(x, y) {\r\n  let line = `M ${x} ${y} L ${x} ${y + 10}`;\r\n  return <path className=\"plot_xmark\" d={line} data-z-index=\"0\" />\r\n}\r\n\r\nfunction prepare_x_axis(width, height, ticks, data_mock, title, y_trans){\r\n  let result = []\r\n\r\n  let ticks_number = ticks + 1;\r\n    \r\n  if (width<=700) {\r\n    ticks_number = 6 + 1;\r\n  }\r\n\r\n\r\n  let length = Object.keys(data_mock).length - 1;\r\n  let data_frame = Math.floor(length/(ticks_number-1));\r\n\r\n  let frame = width / (ticks_number - 1)\r\n\r\n  for (let i=0; i<ticks_number; i++){\r\n    let point = frame * i;\r\n    result.push(make_x_tick(point, height))\r\n  }\r\n\r\n  // for(let i=0; i<ticks_number; i++){\r\n  //   result.push(<text key={i} x={frame*i} className=\"plot_xtick\" textAnchor=\"middle\" y={height + 25}>{formatDate_monthly(data_mock[data_frame*i][1])}</text>)\r\n  // }\r\n\r\n  if (width<=700){\r\n    for(let i=0; i<ticks_number; i++){\r\n      result.push(<text key={i} x={frame*i} className=\"plot_xtick\" textAnchor=\"middle\" y={height + 25}>{formatDate_yearly(data_mock[data_frame*i][1])}</text>)\r\n    }\r\n  } else {\r\n    for(let i=0; i<ticks_number; i++){\r\n      result.push(<text x={frame*i} className=\"plot_xtick\" textAnchor=\"middle\" y={height + 25}>{formatDate_monthly(data_mock[data_frame*i][1])}</text>)\r\n      // result.push(<text key={i} x={frame*i} className=\"plot_xtick\" textAnchor=\"middle\" y={height + 25}>{formatDate(data_mock[data_frame*i][1])}</text>)\r\n    }\r\n  }\r\n\r\n  let line = `M 0 ${height} H ${width}`;\r\n  let height_trans = y_trans\r\n\r\n  if(width>700) {\r\n    result.push(<text x={width/2} textAnchor=\"middle\" className=\"plot_xaxis_title\" y={height + height_trans - 30}><tspan>{title}</tspan></text>)\r\n  } else {\r\n    result.push(<text x={width/2} textAnchor=\"middle\" className=\"plot_xaxis_title\" y={height +40}><tspan>{title}</tspan></text>)\r\n  }\r\n\r\n  result.push(<path key={height} d={line} fill=\"none\" className=\"plot_line\" data-z-index=\"0\" />)\r\n\r\n  return result \r\n}\r\n\r\n\r\n\r\nfunction formatDate(d)\r\n {\r\n  let date = new Date(d)\r\n  var dd = date.getDate(); \r\n  var mm = date.getMonth()+1;\r\n  var yyyy = date.getFullYear(); \r\n  if (dd<10) {dd='0'+dd} \r\n  if (mm<10) {mm='0'+mm};\r\n  return d = dd + '-' + mm+'-' + yyyy\r\n}\r\n\r\nfunction formatDate_monthly(d)\r\n {\r\n  let date = new Date(d)\r\n  var mm = date.getMonth()+1;\r\n  var yyyy = date.getFullYear(); \r\n  if (mm < 10) {mm = '0' + mm};\r\n  return d = mm + '-' + yyyy\r\n}\r\n\r\nfunction formatDate_yearly(d)\r\n {\r\n  let date = new Date(d)\r\n  var yyyy = date.getFullYear(); \r\n  return d = yyyy\r\n}","import React from 'react';\r\n\r\nexport class AxisY extends React.PureComponent {\t\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    let result = [];\r\n    let upper_index = this.props.upper_bound/10;\r\n    let lower_index = this.props.lower_bound/10;\r\n\r\n    let lines_number = upper_index - lower_index;\r\n\r\n    let frame = this.props.dimensions.height / lines_number;\r\n\r\n    let x = 0;\r\n    let y = 0;\r\n\r\n    for(let i=lower_index; i<=upper_index; i++){\r\n      result.push(make_y_tick(-20, this.props.dimensions.height - frame*(i -lower_index),i * 10));\r\n    }\r\n\r\n    let line = `M ${x} ${y} L ${x} ${y + this.props.dimensions.height}`;\r\n\r\n    return (\r\n      <g>\r\n        <g transform={`translate(${-(this.props.dimensions.x_trans/2 + 10)},${this.props.dimensions.height/2})`}><text x=\"0\" textAnchor=\"middle\" transform=\"rotate(-90 0,0)\" className=\"plot_yaxis_title\" y=\"0\"><tspan>{this.props.y_label}</tspan></text></g>\r\n        { get_y_ticks(this.props.dimensions.height, this.props.y_number) }\r\n        { result }\r\n        <path d={line} fill=\"none\" className=\"plot_line\" data-z-index=\"0\" />\r\n        \r\n      </g>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AxisY\r\n\r\nfunction make_y_tick(x, y, value) {\r\n  return <text x={x} textAnchor=\"end\" className=\"plot_ytick\" y={y} key={value}>{value}</text>\r\n}\r\n\r\nfunction make_yy_tick(x, y) {\r\n\r\n  let line = `M ${x-10} ${y} L ${x} ${y}`;\r\n  return <path key={y} d={line} fill=\"none\" className=\"plot_line\" data-z-index=\"0\" />\r\n}\r\n\r\nfunction get_y_ticks (height, lines_number) {\r\n  let result = []\r\n\r\n  let frame = height / lines_number;\r\n\r\n  for (let i=0; i<=lines_number; i++){\r\n      let point = frame * i;\r\n      result.push(make_yy_tick(0,point))\r\n  }\r\n\r\n  return result\r\n}","import React from 'react';\r\nimport { capitalizeString } from '../utils/functions';\r\n\r\nexport class Legend extends React.PureComponent {\t\r\n\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <g>{ prepare_legend(this.props.dimensions, this.props.colors, this.props.keywords) }</g>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Legend;\r\n\r\n\r\n\r\nfunction prepare_legend(dimensions, colors, keywords) {\r\n\r\n    let legend = [];\r\n    let keyword_sizes = []\r\n\r\n    if (dimensions.svg_width>700) {\r\n        for(let i=0; i<colors.length; i++){\r\n            let l = calculate_translate_for_legend(keywords[i].length);\r\n            \r\n    \r\n            let translation = keyword_sizes.reduce((a, b) => a + b, 0);\r\n    \r\n            legend.push(\r\n              <g key={i} data-z-index=\"1\" transform={`translate(${translation},3)`}>\r\n                  <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke={colors[i]} strokeWidth=\"0\"></path>\r\n                  <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" fontSize=\"12px\" stroke=\"#6c757d\" strokeWidth=\"0\">{capitalizeString(keywords[i])}</text>\r\n              </g>\r\n        );\r\n\r\n            keyword_sizes.push(l);\r\n        }\r\n\r\n        let translation = keyword_sizes.reduce((a, b) => a + b, 0);\r\n        let width_trans = (dimensions.svg_width)/2 - translation/2 - dimensions.x_trans;\r\n        let height_trans = dimensions.height + dimensions.y_trans/2;\r\n        height_trans = dimensions.height + dimensions.y_trans - dimensions.y_trans_bottom;\r\n        height_trans = dimensions.height + dimensions.y_trans - 25;\r\n    \r\n        return (\r\n            <g transform={`translate(${width_trans}, ${height_trans})`} className=\"plot_legend\" >\r\n                {legend}\r\n            </g>)\r\n        \r\n    } else {\r\n        for(let i=0; i<keywords.length; i++){\r\n            let l = calculate_translate_for_legend(keywords[i].length);\r\n            keyword_sizes.push(l);\r\n        }\r\n\r\n        for(let i=0; i<colors.length; i++){\r\n\r\n            let trans = Math.max(...keyword_sizes);\r\n    \r\n            legend.push(\r\n            <g data-z-index=\"1\" transform={`translate(${(dimensions.width)/2 - trans/2}, ${i*18+10})`}>\r\n                <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke={colors[i]} stroke-width=\"0\"></path>\r\n                <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"12px\" stroke=\"#6c757d\" stroke-width=\"0\">{capitalizeString(keywords[i])}</text>\r\n            </g>\r\n        );\r\n        }\r\n\r\n        let height_trans = dimensions.height + 43;\r\n    \r\n        return (\r\n            <g transform={`translate(${0}, ${height_trans})`} class=\"plot_legend\" >\r\n                {legend}\r\n            </g>)\r\n    }\r\n}\r\n\r\nfunction calculate_translate_for_legend(keyword_length){\r\n    return (6,5)*keyword_length + 55;\r\n}","import React from 'react';\r\n\r\nexport class Static_Line extends React.PureComponent {\t\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <g>\r\n        { get_static_line(this.props.dimensions, this.props.ranges) }\r\n      </g>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Static_Line\r\n\r\nfunction get_static_line(dimensions, ranges) {\r\n  let x_frame = dimensions.width/(ranges.max_x - 1);\r\n  let x = x_frame * (dimensions.historical_data_length - 1);\r\n\r\n  return (\r\n    <path fill=\"none\" className=\"plot_pointer_line\" d={`M ${x} 0 L ${x} ${dimensions.height}`} strokeDasharray=\"6\" data-z-index=\"0\"></path>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport class Pointer_Line extends React.PureComponent {\t\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <g>{ get_pointer_line(this.props.height, this.props.mark_line) }</g>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pointer_Line\r\n\r\nfunction get_pointer_line(height, mark_line) {\r\n  return (\r\n    <g transform={`translate(${mark_line.pos}, 0)`}>\r\n      <path fill=\"none\" data-z-index=\"0\" className=\"plot_mark_line\" d={`M 0 0 L 0 ${height}`} visibility={`mark_line.visibility`} />         \r\n    </g>\r\n  )\r\n}","import React from 'react';\r\nimport { capitalizeString } from '../utils/functions';\r\n\r\nexport class Info_Box extends React.PureComponent {\t\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <g>\r\n        { get_info_box(this.props.info_box, this.props.width, this.props.height, this.props.keywords) }\r\n      </g>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Info_Box\r\n\r\n\r\n\r\nfunction get_info_box(info_box, box_width, box_height, keywords){ \r\n\r\n  let y_data = [];\r\n  \r\n  if(info_box !== undefined && info_box.value_y !== undefined) {\r\n      for(let i=0; i<info_box.colors.length; i++){\r\n          if(info_box.value_y[3][i] !== null && info_box.value_y[2][i] !== null){\r\n              y_data.push(<g><path fill=\"none\" d={`M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}`} stroke={info_box.colors[i]} strokeWidth=\"2\" opacity=\"1\"></path>\r\n              <text x=\"25\" y={(i + 1)*25 + 25}>{capitalizeString(keywords[i])} {info_box.value_y[2][i].toFixed(1)} (min: {info_box.value_y[3][i].toFixed(1)} | max: {info_box.value_y[4][i].toFixed(1)})</text></g>)\r\n          } else {\r\n              y_data.push(<g><path fill=\"none\" d={`M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}`} stroke={info_box.colors[i]} strokeWidth=\"2\" opacity=\"1\"></path>\r\n                <text x=\"25\" y={(i + 1)*25 + 25}>{capitalizeString(keywords[i])} {info_box.value_y[2][i].toFixed(1)}</text></g>)\r\n          }\r\n      }\r\n  }\r\n\r\n  let date = formatDate(info_box.value_x)\r\n\r\n  return (\r\n  <g transform={`translate(${info_box.pos_x}, ${info_box.pos_y})`} data-z-index=\"1\" className=\"plot_info_box\" visibility={info_box.visibility}>\r\n    <rect x=\"0\" y=\"0\" width={box_width} height={box_height}  />   \r\n    <g className=\"plot_info_box_header\">\r\n      <text x=\"5\" y=\"25\">Date: {date}</text>\r\n    </g>\r\n    {y_data}\r\n  </g>)\r\n}\r\n\r\nfunction formatDate(d)\r\n {\r\n  let date = new Date(d)\r\n  var dd = date.getDate(); \r\n  var mm = date.getMonth()+1;\r\n  var yyyy = date.getFullYear(); \r\n  if(dd<10){dd='0'+dd} \r\n  if(mm<10){mm='0'+mm};\r\n  return d = dd+'-'+mm+'-'+yyyy\r\n}","import React from 'react';\r\n\r\nexport class Area_Path extends React.PureComponent {\t\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    if(this.props.style === \"dash\"){\r\n      return (\r\n        <g>{area_path(this.props.data, this.props.color, 4)}</g>\r\n      );\r\n    } else {\r\n      return (\r\n        <g>{area_path(this.props.data, this.props.color, 0, this.props.slice)}</g>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Area_Path\r\n\r\n\r\n\r\n////////////////\r\n\r\nconst svgPath = (points, command, color, dash) => {\r\n\r\n  const d = points.reduce((acc, point, i, a) => i === 0\r\n  ? `M ${point[0]},${point[2]}`\r\n  : `${acc} ${bezierCommand(point, i, a)}`\r\n  , '')\r\n\r\n  return <path d={d} fill=\"none\" key={color} stroke={color} strokeWidth=\"2\" data-z-index=\"0\" strokeDasharray={dash} pointerEvents=\"none\" />\r\n}\r\n\r\nconst areaPath = (points, command, color) => {\r\n\r\n  let d1 = points.reduce((acc, point, i, a) => i === 0\r\n  ? `M ${point[0]},${point[4]}`\r\n  : `${acc} ${bezierCommand_upper(point, i, a)}`\r\n  , '');\r\n\r\n\r\n\r\n  d1 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][3]}  `;\r\n\r\n  let d3 = points.reverse().reduce((acc, point, i, a) => i === 0\r\n  ? `L ${point[0]},${point[3]}`\r\n  : `${acc} ${bezierCommand_lower(point, i, a)}`\r\n  , '');\r\n\r\n\r\n  d3 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][4]}  `;\r\n\r\n  let d = d1 + d3;\r\n//////////////////////////////////////////\r\n\r\n  return <path d={d} fill={color} stroke={color} strokeWidth=\"2\" data-z-index=\"0\" pointerEvents=\"none\" opacity=\"0.35\" />\r\n}\r\n\r\n\r\n\r\nconst lineCommand = point => `L ${point[0]} ${point[2]}`\r\n\r\n    \r\nexport function area_path(data, color, dash=0, slice=0){\r\n\r\n\r\n    let result = [];\r\n    result.push(svgPath(data, lineCommand, color, dash));\r\n    result.push(areaPath(data.slice(slice), bezierCommand, color));\r\n\r\n    return result;\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// The smoothing ratio\r\nconst smoothing = 0.2\r\n\r\n\r\n// Properties of a line \r\n// I:  - pointA (array) [x,y]: coordinates\r\n//     - pointB (array) [x,y]: coordinates\r\n// O:  - (object) { length: l, angle: a }: properties of the line\r\nconst line = (pointA, pointB) => {\r\n  const lengthX = pointB[0] - pointA[0]\r\n  const lengthY = pointB[2] - pointA[2]\r\n  return {\r\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\r\n    angle: Math.atan2(lengthY, lengthX)\r\n  }\r\n}\r\n\r\n// Position of a control point \r\n// I:  - current (array) [x, y]: current point coordinates\r\n//     - previous (array) [x, y]: previous point coordinates\r\n//     - next (array) [x, y]: next point coordinates\r\n//     - reverse (boolean, optional): sets the direction\r\n// O:  - (array) [x,y]: a tuple of coordinates\r\nconst controlPoint = (current, previous, next, reverse) => {\r\n\r\n  // When 'current' is the first or last point of the array\r\n  // 'previous' or 'next' don't exist.\r\n  // Replace with 'current'\r\n  const p = previous || current\r\n  const n = next || current\r\n\r\n  // Properties of the opposed-line\r\n  const o = line(p, n)\r\n\r\n  // If is end-control-point, add PI to the angle to go backward\r\n  const angle = o.angle + (reverse ? Math.PI : 0)\r\n  const length = o.length * smoothing\r\n\r\n  // The control point position is relative to the current point\r\n  const x = current[0] + Math.cos(angle) * length\r\n  const y = current[2] + Math.sin(angle) * length\r\n  return [x, y]\r\n}\r\n\r\n// Create the bezier curve command \r\n// I:  - point (array) [x,y]: current point coordinates\r\n//     - i (integer): index of 'point' in the array 'a'\r\n//     - a (array): complete array of points coordinates\r\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\r\nconst bezierCommand = (point, i, a) => {\r\n\r\n  // start control point\r\n  const cps = controlPoint(a[i - 1], a[i - 2], point)\r\n\r\n  // end control point\r\n  const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\r\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[2]}`\r\n}\r\n\r\n\r\nconst bezierCommand_upper = (point, i, a) => {\r\n\r\n  // start control point\r\n  const cps = controlPoint_upper(a[i - 1], a[i - 2], point)\r\n\r\n  // if(point[4]<0){\r\n  //   console.log(point[0]+ \": \" +point[1] + \" : \" + point[4])\r\n  // }\r\n  // end control point\r\n  const cpe = controlPoint_upper(point, a[i - 1], a[i + 1], true)\r\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[4]}`\r\n}\r\n\r\nconst bezierCommand_lower = (point, i, a) => {\r\n\r\n  // start control point\r\n  const cps = controlPoint_lower(a[i - 1], a[i - 2], point)\r\n\r\n  // end control point\r\n  const cpe = controlPoint_lower(point, a[i - 1], a[i + 1], true)\r\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[3]}`\r\n}\r\n\r\n\r\nconst line_lower = (pointA, pointB) => {\r\n  const lengthX = pointB[0] - pointA[0]\r\n  const lengthY = pointB[3] - pointA[3]\r\n  return {\r\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\r\n    angle: Math.atan2(lengthY, lengthX)\r\n  }\r\n}\r\n\r\nconst line_upper = (pointA, pointB) => {\r\n  const lengthX = pointB[0] - pointA[0]\r\n  const lengthY = pointB[4] - pointA[4]\r\n  return {\r\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\r\n    angle: Math.atan2(lengthY, lengthX)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst controlPoint_lower = (current, previous, next, reverse) => {\r\n\r\n  // When 'current' is the first or last point of the array\r\n  // 'previous' or 'next' don't exist.\r\n  // Replace with 'current'\r\n  const p = previous || current\r\n  const n = next || current\r\n\r\n  // Properties of the opposed-line\r\n  const o = line_lower(p, n)\r\n\r\n  // If is end-control-point, add PI to the angle to go backward\r\n  const angle = o.angle + (reverse ? Math.PI : 0)\r\n  const length = o.length * smoothing\r\n\r\n  // The control point position is relative to the current point\r\n  const x = current[0] + Math.cos(angle) * length\r\n  const y = current[3] + Math.sin(angle) * length\r\n  return [x, y]\r\n}\r\n\r\nconst controlPoint_upper = (current, previous, next, reverse) => {\r\n\r\n  // When 'current' is the first or last point of the array\r\n  // 'previous' or 'next' don't exist.\r\n  // Replace with 'current'\r\n  const p = previous || current\r\n  const n = next || current\r\n\r\n  // Properties of the opposed-line\r\n  const o = line_upper(p, n)\r\n\r\n  // If is end-control-point, add PI to the angle to go backward\r\n  const angle = o.angle + (reverse ? Math.PI : 0)\r\n  const length = o.length * smoothing\r\n\r\n  // The control point position is relative to the current point\r\n  const x = current[0] + Math.cos(angle) * length\r\n  const y = current[4] + Math.sin(angle) * length\r\n  return [x, y]\r\n}","import React from 'react';\r\n\r\nexport const Plot = props => {\r\n    return (\r\n        <g>\r\n            <text x={ props.dimensions.width/2 } className=\"plot_title\" textAnchor=\"middle\" y={ -props.dimensions.y_trans/3 }>{ props.title }</text>\r\n        </g>\r\n    )\r\n};\r\n\r\nexport default Plot;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { get_random_colors, get_box_height, get_data_mocks_area_DATES, scale_data_mocks, get_data_map_area_DATES, get_min_value, get_max_value } from './utils/functions'\r\nimport { appConfig } from './utils/config.js';\r\nimport Results from \"./Results\"\r\nimport AxisX from './parts/AxisX';\r\nimport AxisY from './parts/AxisY';\r\nimport Legend from './parts/Legend';\r\nimport Static_Line from './parts/Static_Line';\r\nimport Pointer_Line from './parts/Pointer_Line';\r\nimport Info_Box from './parts/Info_Box';\r\nimport Area_Path from './parts/Area_Path';\r\nimport Plot from './parts/Plot';\r\nimport './css/plot.css';\r\n\r\n\r\nlet dimensions = appConfig.dimensions;\r\nconst ratio = 4.5;\r\n\r\nexport class KeywordPlot extends React.PureComponent {\t\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleHoverOff = this.handleHoverOff.bind(this);\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n\r\n    let x_trans_left = 85*4;\r\n    let y_trans_up = 85;\r\n    let y_trans_bottom = 85;\r\n\r\n    let width = (window.innerWidth*(0.6) - 2*x_trans_left)*0.8;\r\n    let height = this.props.plot_settings.height - y_trans_up - y_trans_bottom;\r\n\r\n    this.divRef = React.createRef();\r\n\r\n    let min_y = get_min_value(this.props.data.historical_data);\r\n    let max_y = get_max_value(this.props.data.historical_data);\r\n\r\n    let number_of_series = this.props.plot_settings.keywords.length;\r\n\r\n    let lower_bound = (Math.ceil(((min_y)+1) / 10)-1) * 10\r\n    let upper_bound = Math.ceil((Math.abs(max_y)+1) / 10) * 10\r\n\r\n    let ranges = {\r\n      max_x: (this.props.data.historical_data[0].length + this.props.data.forecasted_data[0].length),\r\n      min_x: 0,\r\n      max_y: upper_bound,\r\n      min_y: lower_bound,\r\n    }\r\n\r\n    this.state = {\r\n      title: this.props.plot_settings.title,\r\n      x_label: this.props.plot_settings.x_label,\r\n      y_label: this.props.plot_settings.y_label,\r\n\r\n      mark_line: {\r\n        pos: 0,\r\n        visibility: \"hidden\"\r\n      },\r\n\r\n      info_box: {\r\n        pos_x: 0,\r\n        pos_y: 0,\r\n        visibility: \"hidden\",\r\n        colors: get_random_colors(number_of_series),\r\n      },\r\n\r\n      scaled_data: this.scale_data_mocks(this.props.data, ranges, width, height),\r\n      data_map_area_DATES: this.get_data_map_area_DATES(this.props.data),\r\n\r\n      colors: this.get_random_colors(number_of_series),\r\n      info_box_height: this.get_box_height(number_of_series),\r\n\r\n      dimensions: {\r\n        svg_width: width,\r\n        width: width/1.1,\r\n        height: height,\r\n        x_trans: x_trans_left,\r\n        y_trans: y_trans_up,\r\n        y_trans_bottom: y_trans_bottom,\r\n        historical_data_length: this.props.data.historical_data[0].length,\r\n        forecasted_data_length: this.props.data.forecasted_data[0].length,\r\n      },\r\n      min_y: min_y,\r\n      max_y: max_y,\r\n      ticks: 12,\r\n\r\n      ranges: ranges,\r\n      number_of_series: number_of_series,\r\n      // height: height\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n    this.divRef.current.focus();\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  updateWindowDimensions() {\r\n    let svg_width = this.divRef.current.clientWidth;\r\n\r\n    let sizes = this.get_dimensions(svg_width)\r\n\r\n    let x_trans_left = sizes.x_trans_left;\r\n    let x_trans_right = sizes.x_trans_right;\r\n    let y_trans_up = sizes.y_trans_up;\r\n    let y_trans_bottom = sizes.y_trans_bottom;\r\n    let height = sizes.height;\r\n\r\n    let plot_width = svg_width - x_trans_left - x_trans_right;\r\n    let plot_height = this.props.plot_settings.height - y_trans_up - y_trans_bottom;\r\n    // let plot_height = this.state.height - y_trans_up - y_trans_bottom;\r\n\r\n    let ranges = this.state.ranges;\r\n\r\n    this.setState({\r\n      dimensions: {\r\n        svg_width: svg_width,\r\n        width: plot_width,\r\n        height: plot_height,\r\n        x_trans: x_trans_left,\r\n        y_trans: y_trans_up,\r\n        x_trans_right: x_trans_right,\r\n        y_trans_bottom: y_trans_bottom,\r\n\r\n        historical_data_length: this.props.data.historical_data[0].length,\r\n        forecasted_data_length: this.props.data.forecasted_data[0].length,\r\n       },\r\n       scaled_data: this.scale_data_mocks(this.props.data, ranges, plot_width, plot_height),\r\n    });\r\n  }\r\n\r\n  scale_data_mocks(data, ranges, width, height){\r\n    return scale_data_mocks(data, ranges, width, height)\r\n  }\r\n\r\n  get_data_map_area_DATES(data){\r\n    return get_data_map_area_DATES(data)\r\n  }\r\n\r\n  get_random_colors(number_of_series){\r\n    return get_random_colors(number_of_series)\r\n  }\r\n\r\n  get_box_height(number_of_series){\r\n    return get_box_height(number_of_series)\r\n  }\r\n\r\n\r\n  handleMouseMove(event) {\r\n    var e = event.target;\r\n    var dim = e.getBoundingClientRect();\r\n    var x = event.clientX - dim.left - this.state.dimensions.x_trans;\r\n    var y = event.clientY - dim.top - this.state.dimensions.y_trans;\r\n\r\n    if(x >= 0 && y >= 0 && x <= this.state.dimensions.width && y <= this.state.dimensions.height){\r\n\r\n      let x_diff = this.state.ranges.max_x - this.state.ranges.min_x;  \r\n      let x_frame = this.state.dimensions.width/x_diff;\r\n      let key = Math.round((x)/x_frame);\r\n\r\n\r\n      if (this.state.data_map_area_DATES[key] !== undefined){\r\n\r\n        let left_index = Math.round((this.state.ranges.max_x - this.state.ranges.min_x)/2) - 1;\r\n        let right_index = Math.round((this.state.ranges.max_x - this.state.ranges.min_x)/2) + 1;\r\n\r\n        //keys left\r\n        for(let i=this.state.ranges.min_x; i<=key; i++){\r\n          if(this.state.data_map_area_DATES[i] !== undefined){\r\n            left_index = i\r\n          }\r\n        }\r\n\r\n        //keys right\r\n        for(let i=key; i<=this.state.ranges.max_x; i++){\r\n          if(this.state.data_map_area_DATES[i] !== undefined){\r\n            right_index = i\r\n          }\r\n        }\r\n    \r\n        //index difference\r\n        this.setState({\r\n          mark_line: {\r\n            pos: x,  \r\n          },\r\n          info_box: {\r\n            pos_x: x,\r\n            pos_y: y,\r\n            value_x: this.state.data_map_area_DATES[key][1],\r\n            value_y: this.state.data_map_area_DATES[key],\r\n            colors: get_random_colors(this.props.plot_settings.number_of_series)\r\n          }\r\n        })\r\n        if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\r\n          this.setState({\r\n            mark_line: {\r\n              pos: x\r\n            }\r\n          })\r\n        }\r\n      } else if (key !== undefined){\r\n////////////////////////////\r\n\r\n        let left_index = key - 1;\r\n        let right_index = key + 1;\r\n        \r\n        //keys left\r\n        for (let i=key; i>=0; i--) {\r\n          if(this.state.data_map_area_DATES[i] !== undefined){\r\n            left_index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        //keys right\r\n        for (let i=key; i<=this.state.ranges.max_x; i++) {\r\n          if(this.state.data_map_area_DATES[i] !== undefined) {\r\n            right_index = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        //index difference\r\n        let left_diff = key - left_index;\r\n        let right_diff = right_index - key;\r\n\r\n\r\n        if((this.state.data_map_area_DATES[left_index] !== undefined) && (this.state.data_map_area_DATES[right_index] !== undefined)){\r\n          if (left_diff<=right_diff ) {\r\n            this.setState({\r\n              mark_line: {\r\n                pos: x,  \r\n              },\r\n              info_box: {\r\n                pos_x: x,\r\n                pos_y: y,\r\n                value_x: this.state.data_map_area_DATES[key][1],\r\n                value_y: this.state.data_map_area_DATES[key],\r\n                colors: get_random_colors(this.props.plot_settings.number_of_series)\r\n              }\r\n            })\r\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\r\n              this.setState({\r\n                mark_line: {\r\n                  pos: x\r\n                }\r\n              })\r\n            }\r\n          } else {\r\n            this.setState({\r\n              mark_line: {\r\n                pos: x,  \r\n              },\r\n              info_box: {\r\n                pos_x: x,\r\n                pos_y: y,\r\n                value_x: this.state.data_map_area_DATES[key][1],\r\n                value_y: this.state.data_map_area_DATES[key],\r\n                colors: get_random_colors(this.props.plot_settings.number_of_series)\r\n              }\r\n            })\r\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\r\n              this.setState({\r\n                mark_line: {\r\n                  pos: x\r\n                }\r\n              })\r\n            }\r\n          }\r\n\r\n        }\r\n/////////////////\r\n\r\n      }\r\n    } else if (x > this.state.dimensions.width || y > this.state.dimensions.height || x < this.state.dimensions.x_trans || y < this.state.dimensions.y_trans){\r\n      this.setState({\r\n        mark_line: {\r\n          visibility: \"hidden\",\r\n          pos: 9999\r\n        },\r\n        info_box: {\r\n          visibility: \"hidden\",\r\n          pos_x: 9999,\r\n          pos_y: 9999,\r\n          colors: get_random_colors(this.props.plot_settings.number_of_series)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  handleHoverOff(event) {\r\n    this.setState({\r\n      mark_line:{\r\n          pos: 0,\r\n          visibility: \"hidden\"\r\n      },\r\n      info_box: {\r\n        pos_x: 0,\r\n        pos_y: 0,\r\n        visibility: \"hidden\",\r\n        colors: get_random_colors(this.props.plot_settings.number_of_series)\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n  let area_paths = this.state.scaled_data[0].map(( entity, index ) => {\r\n      return (\r\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"none\"} slice={4}/>\r\n      );\r\n    });\r\n\r\n    let area_paths_future = this.state.scaled_data[1].map(( entity, index ) => {\r\n      return (\r\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"dash\"} />\r\n      );\r\n    });\r\n\r\n    let v_b = \"0 0 \" + this.state.dimensions.svg_width + \" \" + this.props.plot_settings.height;\r\n    let v_trans = \"translate(\" + this.state.dimensions.x_trans + \",\" + this.state.dimensions.y_trans + \")\";\r\n\r\n    const aa = this.state.max_y;\r\n    const bb = this.state.min_y;\r\n\r\n    let lower_bound = (Math.ceil(((bb)+1) / 10)-1) * 10\r\n    let upper_bound = Math.ceil((Math.abs(aa)+1) / 10) * 10\r\n    let calc_y_number = (upper_bound - lower_bound)/10;\r\n\r\n    let results = []\r\n\r\n    if(this.state.info_box.value_y){\r\n      for(let i=0; i<this.state.info_box.colors.length; i++){\r\n        if(this.state.info_box.value_y[3][i]){\r\n          results.push(\r\n            {\r\n              \"date\": formatDate(this.state.info_box.value_x),\r\n              \"keyword\":this.props.plot_settings.keywords[i],\r\n              \"value: \": this.state.info_box.value_y[2][i].toFixed(1),\r\n              \"min: \": this.state.info_box.value_y[3][i].toFixed(1),\r\n              \"max: \": this.state.info_box.value_y[4][i].toFixed(1)\r\n            }\r\n            )\r\n        }\r\n\r\n      // console.log(this.state.info_box.value_y[2][i].toFixed(1) +  \"min: \" + this.state.info_box.value_y[3][i].toFixed(1) +  \"max: \"+ this.state.info_box.value_y[4][i].toFixed(1))\r\n    }\r\n    console.log(results)\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <div ref={this.divRef}>\r\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" onMouseMove={this.handleMouseMove} onMouseLeave={this.handleHoverOff} width={this.state.dimensions.svg_width} height={this.props.plot_settings.height} viewBox={v_b}>\r\n            <g>\r\n              <g transform={v_trans}>\r\n\r\n                { area_paths }\r\n\r\n                { area_paths_future }\r\n                \r\n                <Plot dimensions={this.state.dimensions} y_number={this.state.y_number} title={this.state.title} />\r\n\r\n                <AxisY dimensions={this.state.dimensions} y_number={calc_y_number} y_label={this.state.y_label} lower_bound={lower_bound} upper_bound={upper_bound} />\r\n\r\n                <AxisX dimensions={this.state.dimensions} x_label={this.state.x_label} ticks={this.state.ticks} dates={this.state.data_map_area_DATES} />\r\n                \r\n                <Legend dimensions={this.state.dimensions} colors={this.state.colors} keywords={this.props.plot_settings.keywords} />\r\n\r\n                <Static_Line dimensions={this.state.dimensions} ranges={this.state.ranges} />\r\n\r\n                <Pointer_Line mark_line={this.state.mark_line} height={this.state.dimensions.height} />\r\n\r\n                <Info_Box info_box={this.state.info_box} width={dimensions.box_width} height={this.state.info_box_height} keywords={this.props.plot_settings.keywords}  />\r\n                \r\n              </g>\r\n            </g>\r\n        </svg>\r\n        <div>\r\n\r\n\r\n{/* {this.state.info_box}} */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  get_dimensions(width) {\r\n    let height = width/(ratio);\r\n    let x_trans_left = this.state.x_trans;\r\n    let y_trans_up = this.state.y_trans;\r\n    let x_trans_right = this.state.x_trans;\r\n    let y_trans_bottom = this.state.y_trans;\r\n\r\n    if(width>1800) {\r\n      height = height;\r\n      x_trans_left = 80;\r\n      y_trans_up = 80;\r\n      x_trans_right = 50;\r\n      y_trans_bottom = 80;\r\n    }\r\n\r\n    if(width<=1800) {\r\n      height = (1.2)*width/(ratio);\r\n      x_trans_left = 80;\r\n      y_trans_up = 80;\r\n      x_trans_right = 50;\r\n      y_trans_bottom = 80;\r\n    }\r\n\r\n    if(width<=1600) {\r\n      height = (1.4)*width/(ratio);\r\n      x_trans_left = 80;\r\n      y_trans_up = 80;\r\n      x_trans_right = 50;\r\n      y_trans_bottom = 80;\r\n    }\r\n    \r\n    if(width<=1400) {\r\n      height = (1.6)*width/(ratio);\r\n      x_trans_left = 70;\r\n      y_trans_up = 70;\r\n      x_trans_right = 50;\r\n      y_trans_bottom = 70;\r\n    }\r\n\r\n    if (width<=1200) {\r\n      height = (1.8)*width/(ratio);\r\n      x_trans_left = 60;\r\n      y_trans_up = 60;\r\n      x_trans_right = 50;\r\n      y_trans_bottom = 70;\r\n    }\r\n\r\n    // if(width<=800){\r\n    //   height = (2.2)*width/(ratio);\r\n    //   x_trans = 60;\r\n    //   y_trans = 20;\r\n    //   x_trans2 = 20;\r\n    //   y_trans2 = 60;\r\n    // }\r\n\r\n    if(width<=700) {\r\n      height = (3.1)*width/(ratio);\r\n      x_trans_left = 60;\r\n      y_trans_up = 20;\r\n      x_trans_right = 50;\r\n      y_trans_bottom = this.state.number_of_series*14 + 80;\r\n    }\r\n\r\n    let sizes = {\r\n      height: height,\r\n      x_trans_left: x_trans_left,\r\n      y_trans_up: y_trans_up,\r\n      x_trans_right: x_trans_right,\r\n      y_trans_bottom: y_trans_bottom\r\n    }\r\n\r\n    return sizes;\r\n  }\r\n\r\n}\r\n\r\nfunction formatDate(d)\r\n {\r\n  let date = new Date(d)\r\n  var dd = date.getDate(); \r\n  var mm = date.getMonth()+1;\r\n  var yyyy = date.getFullYear(); \r\n  if(dd<10){dd='0'+dd} \r\n  if(mm<10){mm='0'+mm};\r\n  return d = dd+'-'+mm+'-'+yyyy\r\n}\r\nexport default KeywordPlot;\r\n","\r\nexport const appConfig = {\r\n\r\n  dimensions: {\r\n    box_width: 400,\r\n    box_height: 120\r\n  },\r\n\r\n};","import { KeywordPlot } from \"./KeywordPlot\";\r\n\r\nexport const Plot = {\r\n    KeywordPlot,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Spinner } from \"./loader\";\r\nimport { Plot } from \"./plot\";\r\n\r\nconst componentNames = [\r\n  // \"Oval\",\r\n  // \"Puff\",\r\n  \"KeywordPlot\",\r\n];\r\n\r\nfunction componentName() {\r\n  // if (componentNames.includes(type)) {\r\n  //   return Spinner[type];\r\n  // }\r\n  // return Spinner.Audio;\r\n  return Plot.KeywordPlot;\r\n}\r\n\r\n/**\r\n * @return {null}\r\n */\r\nexport default function KeywordPlot(props) {\r\n  const [display, setDisplay] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   let timer;\r\n  //   if (props.timeout && props.timeout > 0) {\r\n  //     timer = setTimeout(() => {\r\n  //       setDisplay(false);\r\n  //     }, props.timeout);\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     if (timer) clearTimeout(timer);\r\n  //   };\r\n  // });\r\n\r\n  // if (!props.visible || props.visible === \"false\") {\r\n  //   return null;\r\n  // }\r\n  // return display ? (\r\n  //   <div aria-busy=\"true\" className={props.className} style={props.style}>\r\n  //     {React.createElement(componentName(props.type), { ...props })}\r\n  //   </div>\r\n  // ) : null;\r\n  return display ? (\r\n    <div aria-busy=\"true\" >\r\n      {React.createElement(componentName(), { ...props })}\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nKeywordPlot.propTypes = {\r\n  type: PropTypes.oneOf([...componentNames]),\r\n  style: PropTypes.objectOf(PropTypes.string),\r\n  className: PropTypes.string,\r\n  visible: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\r\n  timeout: PropTypes.number\r\n};\r\n\r\nKeywordPlot.defaultProps = {\r\n  type: \"Puff2\",\r\n  style: {},\r\n  className: \"\",\r\n  visible: true,\r\n  timeout: 0\r\n};\r\n","\r\nexport const USA_STATES =[\r\n    ['us', 0, ' All states'],\r\n    ['us-ma', 1, 'Massachusetts'],\r\n    ['us-wa', 2, 'Washington'],\r\n    ['us-ca', 3, 'California'],\r\n    ['us-or', 4, 'Oregon'],\r\n    ['us-wi', 5, 'Wisconsin'],\r\n    ['us-me', 6, 'Maine'],\r\n    ['us-mi', 7, 'Michigan'],\r\n    ['us-nv', 8, 'Nevada'],\r\n    ['us-nm', 9, 'New Mexico'],\r\n    ['us-co', 10, \"Colorado\"],\r\n    ['us-wy', 11, 'Wyoming'],\r\n    ['us-ks', 12, 'Kansas'],\r\n    ['us-ne', 13, 'Nebraska'],\r\n    ['us-ok', 14, 'Oklahoma'],\r\n    ['us-mo', 15, 'Missouri'],\r\n    ['us-il', 16, 'Illinois'],\r\n    ['us-in', 17, 'Indiana'],\r\n    ['us-vt', 18, 'Vermont'],\r\n    ['us-ar', 19, 'Arkansas'],\r\n    ['us-tx', 20, 'Texas'],\r\n    ['us-ri', 21, 'Rhode Island'],\r\n    ['us-al', 22, 'Alabama'],\r\n    ['us-ms', 23, 'Mississippi'],\r\n    ['us-nc', 24, 'North Carolina'],\r\n    ['us-va', 25, 'Virginia'],\r\n    ['us-ia', 26, 'Iowa'],\r\n    ['us-md', 27, 'Maryland'],\r\n    ['us-de', 28, 'Delaware'],\r\n    ['us-pa', 29, 'Pennsylvania'],\r\n    ['us-nj', 30, 'New Jersey'],\r\n    ['us-ny', 31, 'New York'],\r\n    ['us-id', 32, 'Idaho'],\r\n    ['us-sd', 33, 'South Dakota'],\r\n    ['us-ct', 34, 'Connecticut'],\r\n    ['us-nh', 35, 'New Hampshire'],\r\n    ['us-ky', 36, 'Kentucky'],\r\n    ['us-oh', 37, 'Ohio'],\r\n    ['us-tn', 38, 'Tennessee'],\r\n    ['us-wv', 39, 'West Virginia'],\r\n    ['us-dc', 40, 'District of Columbia'],\r\n    ['us-la', 41, 'Louisiana'],\r\n    ['us-fl', 42, 'Florida'],\r\n    ['us-ga', 43, 'Georgia'],\r\n    ['us-sc', 44, 'South Carolina'],\r\n    ['us-mn', 45, 'Minnesota'],\r\n    ['us-mt', 46, 'Montana'],\r\n    ['us-nd', 47, 'North Dakota'],\r\n    ['us-az', 48, 'Arizona'],\r\n    ['us-ut', 49, 'Utah'],\r\n    ['us-hi', 50, 'Hawaii'],\r\n    ['us-ak', 51, 'Alaska']\r\n].sort(function (a, b) {\r\n    return ('' + a[2]).localeCompare(b[2]);\r\n})","import React, { Component } from 'react';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { USA_STATES } from '../states.js';\r\n\r\nconst time_frames = [\r\n    [0, \"Weekly\", \"today 5-y\"],\r\n    [1, \"Daily\", \"today 12-m\"],\r\n    [2, \"Hourly\", \"today 1-m\"],\r\n]\r\n\r\nclass InputComponent extends Component {\t\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.selectedState = this.selectedState.bind(this);\r\n        this.selectedTimeFrame = this.selectedTimeFrame.bind(this);\r\n        this.state = {\r\n            keywords: [],\r\n            selected_state_name: USA_STATES[0][0],\r\n            selected_time_frame: time_frames[0][2]\r\n        };\r\n    }\r\n\r\n    handleClick(event){\r\n        event.preventDefault();\r\n\r\n        let keywords = this.arrayTrim(this.state.keywords);\r\n        let selectedState = this.state.selected_state_name;\r\n        let selectedTimeFrame = this.state.selected_time_frame;\r\n\r\n        if (selectedTimeFrame === time_frames[0][2]) {\r\n            if (keywords.length<=5) {\r\n                this.props.callbackFromParent(keywords, selectedState, selectedTimeFrame);    \r\n            } else {\r\n                this.props.errorTimeframeCallback(\"Too many keywords\")    \r\n            }\r\n            \r\n        } else {\r\n            this.props.errorTimeframeCallback(\"Incorrect Forecast Granularity\")\r\n        }\r\n    }\r\n\r\n    selectedState(event){\r\n        this.setState({\r\n            selected_state_name: event.target.value.split(',')[0]\r\n        });\r\n    }\r\n\r\n    selectedTimeFrame(event){\r\n        this.setState({\r\n            selected_time_frame: event.target.value.split(',')[2]\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n\r\n        let array = event.target.value.split(',')\r\n\r\n        this.setState({\r\n            keywords: array,\r\n        });\r\n    }\r\n\r\n    arrayTrim(array){\r\n        let result = array.map(function (el) {\r\n            return el.trim();\r\n        });\r\n\r\n        return result;\r\n    }\r\n    \r\n    render() {\r\n        let namesList = USA_STATES.map(function(state){\r\n            return <option key={state[1]} value={state}>{state[2]}</option>;\r\n        })\r\n\r\n        let time_framesList = time_frames.map(function(time_frame){\r\n            return <option key={time_frame[0]} value={time_frame}>{time_frame[1]}</option>;\r\n        })\r\n\r\n        return (\r\n            <div className=\"input_bar input-bar-item width100\">\r\n                <Form onSubmit={this.handleClick} className=\"input_form\">\r\n                    <Form.Group className=\"form-inline\">\r\n                        <div className=\"keyword_div\"> \r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-row\">\r\n                                    <label className=\"col-input-keywords-label col-form-label input_label\" htmlFor=\"keywords_input\">Keywords</label>\r\n                                    <Form.Control className=\"col-input-keywords\" type=\"text\" placeholder=\"Enter keywords\" value={this.state.keywords} onChange={this.handleChange} id=\"keywords_input\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"state_select_div\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-row\">\r\n                                        <label className=\"label-select-state col-form-label input_label\" htmlFor=\"select_state_input\">Location</label>\r\n                                    \r\n                                        <Form.Control as=\"select\" onChange={this.selectedState}  id=\"select_state_input\" className=\"col-input-state\">\r\n                                            {namesList}\r\n                                        </Form.Control>                                \r\n                                        <div className=\"input_button col-button\">\r\n                                            <Button variant=\"primary\" type=\"submit\" className=\"btn-blue\">Submit</Button>\r\n                                        </div> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default InputComponent\r\n","import React from 'react';\r\nimport Results from \"./components/plot/src/plot/Results\"\r\nimport Input from './components/Input'\r\n\r\nimport KeywordPlot from './components/plot/index.js';\r\nimport { appConfig } from './config.js';\r\nimport { get_min_value, get_max_value, capitalizeString } from './components/plot/src/plot/utils/functions';\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/styles.css';\r\n\r\nlet dimensions = appConfig.dimensions;\r\n\r\nconst MA_Day_5 = \"5 Day MA for \";\r\nconst LOWER_BAND = \"Lower Band for \";\r\nconst UPPER_BAND = \"Upper Band for \";\r\n\r\n\r\nconst ratio = 4.5;\r\n\r\nconst SECONDS_NUMBER = 60;\r\n\r\nclass App extends React.PureComponent {\r\n  \r\n    constructor(props){\r\n      super(props);\r\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n      this.handleMouseMove = this.handleMouseMove.bind(this);\r\n      // this.handleHoverOff = this.handleHoverOff.bind(this);\r\n\r\n      // this.timer = 0;\r\n      // this.startTimer = this.startTimer.bind(this);\r\n      // this.countDown = this.countDown.bind(this);\r\n\r\n      this.state = {\r\n        username: \"user\",\r\n        displayResults: false,\r\n        fetching_results: false,\r\n        displayError: false,\r\n\r\n        region_state: \"US\",\r\n        selected_time_frame: \"today 5-y\",\r\n        keywords: [],\r\n        data: [],\r\n\r\n        \r\n        error_message: \"\",\r\n        \r\n        time: {},\r\n        // seconds: SECONDS_NUMBER,\r\n      };\r\n\r\n      this.myRef = React.createRef();\r\n\r\n    }\r\n\r\n    fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\r\n      this.setState({\r\n          displayResults: false,\r\n          region_state: selected_state_name.toUpperCase(),\r\n      });\r\n\r\n      this.fetchData(keywords, selected_state_name, selected_time_frame)\r\n    }\r\n\r\n    errorCallback = (message) => {\r\n\r\n      this.setState({\r\n        displayError: true,\r\n        error_message: message,\r\n      });\r\n\r\n      window.setTimeout(() => {\r\n        this.setState({\r\n          displayError: false\r\n        });\r\n      }, 2000);\r\n\r\n    }\r\n\r\n    mapCallback = (state) => {\r\n\r\n      this.setState({\r\n        displayResults: false,\r\n        region_state: state.toUpperCase(),\r\n      });\r\n\r\n      this.fetchData(this.state.keywords, state, this.state.selected_time_frame)\r\n    }\r\n\r\n    fetchData(keywords, state, selected_time_frame){\r\n\r\n      let url = \"/data\"\r\n      // let url = appConfig.KEYWORDS_DATA2\r\n\r\n      this.setState({\r\n        fetching_results: true,\r\n        keywords: keywords\r\n      })\r\n\r\n      fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type':'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          keywords: keywords, region_state: state, time_frame: selected_time_frame\r\n        }),\r\n      }).then(res => res.json())\r\n        .then(\r\n        (result) => {\r\n          let width = this.myRef.current.offsetWidth;\r\n          let sizes = this.get_dimensions(width);\r\n\r\n          this.setState({\r\n            keywords: keywords,\r\n            displayResults: true,\r\n            fetching_results: false,\r\n\r\n            region_state: state.toUpperCase(),\r\n            selected_time_frame: selected_time_frame,\r\n\r\n            data: this.get_data2(keywords, result),\r\n            \r\n            div_height: sizes.height,\r\n            width: width,\r\n          });\r\n        }).catch(function(error) {\r\n        console.log(error)\r\n        })\r\n      }\r\n\r\n    componentDidMount() {\r\n      this.updateWindowDimensions();\r\n      window.addEventListener('resize', this.updateWindowDimensions);\r\n      this.myRef.current.focus();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n   \r\n    updateWindowDimensions() {\r\n      let width = this.myRef.current.offsetWidth;\r\n      let sizes = this.get_dimensions(width);\r\n\r\n      this.setState({\r\n        div_height: sizes.height,\r\n        width: width,\r\n      });\r\n    }\r\n\r\n\r\n    handleMouseMove= () => {\r\n    }\r\n\r\n    render() {\r\n\r\n      let plot_settings = {\r\n        title: \"Trends Forecast\",\r\n        x_label: \"Date\",\r\n        y_label: \"Search interest (%)\",\r\n\r\n        number_of_series: this.state.keywords.length,\r\n        keywords: this.state.keywords,\r\n\r\n        height: this.state.div_height,\r\n        width: this.state.width\r\n\r\n      }\r\n\r\n        return (\r\n          <div ref={this.myRef} onMouseMove={this.handleMouseMove} onMouseLeave={this.handleHoverOff}>\r\n            \r\n            <div className=\"main_results\">\r\n              <Input callbackFromParent={this.fetchCallback} errorTimeframeCallback={this.errorCallback} />\r\n\r\n              { (this.state.displayError) ? (<div className=\"error_message\">{this.state.error_message}</div>) : (<div><br/></div>)}\r\n\r\n            { (this.state.displayResults) ? (\r\n            \r\n            <div className=\"content\">\r\n              <div className=\"results_div\">\r\n                  <KeywordPlot plot_settings={plot_settings} data={this.state.data} />\r\n\r\n              </div>\r\n\r\n            </div>  ) : (\r\n            \r\n            <div>\r\n              {/* <div className=\"intro\">\r\n\r\n              </div> */}\r\n              {this.state.fetching_results ? (    \r\n                <div className=\"spinner\">\r\n                  <Loader type=\"Oval\" color=\"#1694d0\" height={200} width={200} timeout={30000} />\r\n                </div>   \r\n                ) : (<div></div>) }\r\n            </div>\r\n            )\r\n          }\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n      \r\n    }\r\n    \r\n      get_data(keywords, result) {\r\n        let historical_data = []\r\n        let forecasted_data = []\r\n\r\n        for (let keyword in keywords) {  \r\n          let index = 0;\r\n          let k_w = keywords[keyword]\r\n          let length = Object.keys(result[k_w]).length - 60;\r\n          console.log(Object.keys(result[k_w]).length)\r\n          \r\n          let arr = Object.keys(result[k_w]).map(\r\n            function(key) {\r\n              if(result[k_w][key] !== null){\r\n                if (index < 4) {\r\n                  return [index++, new Date(key).valueOf(), result[k_w][key], result[LOWER_BAND+k_w][key], result[UPPER_BAND+k_w][key]]\r\n                } else {\r\n                  return [index++, new Date(key).valueOf(), result[MA_Day_5+k_w][key], result[LOWER_BAND+k_w][key], result[UPPER_BAND+k_w][key]]\r\n                }\r\n              } \r\n            }\r\n          );\r\n\r\n          historical_data.push(arr.slice(0, index))\r\n\r\n          arr = Object.keys(result[keywords[keyword] + \"F\"]).map(\r\n            function(key) {\r\n              if (index < 4) {\r\n                return [index++, new Date(key).valueOf(), result[keywords[keyword] + \"F\"][key], result[LOWER_BAND+k_w+ \"F\"][key], result[UPPER_BAND + k_w + \"F\"][key]]            \r\n              } else {\r\n                return [index++, new Date(key).valueOf(), result[MA_Day_5 + k_w + \"F\"][key], result[LOWER_BAND + k_w + \"F\"][key], result[UPPER_BAND + k_w + \"F\"][key]]\r\n              }\r\n            }\r\n          );\r\n\r\n          forecasted_data.push(arr.slice(length, length + 52))\r\n        }\r\n\r\n        return {\r\n          historical_data: historical_data,\r\n          forecasted_data: forecasted_data\r\n        }\r\n\r\n      }\r\n\r\n      get_data2(keywords, result) {\r\n        let historical_data = []\r\n        let forecasted_data = []\r\n\r\n        for (let keyword in keywords) {  \r\n          let index = 0;\r\n          let k_w = keywords[keyword]\r\n          let length = Object.keys(result.historical_data).length\r\n\r\n          \r\n          let arr = Object.keys(result.historical_data).map(\r\n            function(key) {\r\n              if(result.historical_data[key] !== null){\r\n                if (index < 4) {\r\n                  return [index++, new Date(key).valueOf(), result.historical_data[key][k_w].value, result.historical_data[key][k_w].L_B, result.historical_data[key][k_w].U_B]\r\n                } else {\r\n                  return [index++, new Date(key).valueOf(), result.historical_data[key][k_w].M_A, result.historical_data[key][k_w].L_B, result.historical_data[key][k_w].U_B]\r\n                }\r\n              } \r\n            }\r\n          );\r\n  \r\n          historical_data.push(arr.slice(0, index))\r\n  \r\n          arr = Object.keys(result.forecasted_data).map(\r\n            function(key) {\r\n              if (index < 4) {\r\n                return [index++, new Date(key).valueOf(), result.forecasted_data[key][k_w].value, result.forecasted_data[key][k_w].L_B, result.forecasted_data[key][k_w].U_B]\r\n              } else {\r\n                return [index++, new Date(key).valueOf(), result.forecasted_data[key][k_w].M_A, result.forecasted_data[key][k_w].L_B, result.forecasted_data[key][k_w].U_B]\r\n              }\r\n            }\r\n          );\r\n  \r\n          forecasted_data.push(arr.slice(length, length + 52))\r\n        }\r\n\r\n        return {\r\n          historical_data: historical_data,\r\n          forecasted_data: forecasted_data\r\n        }\r\n  \r\n      }\r\n\r\n  get_dimensions(width) {\r\n    let height = width/(ratio);\r\n\r\n    if (width>1800) {\r\n      height = height;\r\n    }\r\n\r\n    if (width<=1800) {\r\n      height = (1.2)*width/(ratio);\r\n    }\r\n\r\n    if (width<=1600) {\r\n      height = (1.4)*width/(ratio);\r\n    }\r\n    \r\n    if (width<=1400) {\r\n      height = (1.7)*width/(ratio);\r\n    }\r\n\r\n    if (width<=1200) {\r\n      height = (2.2)*width/(ratio);\r\n    }\r\n\r\n    if (width<=700) {\r\n      height = (3.4)*width/(ratio);\r\n    }\r\n\r\n    let sizes = {\r\n      height: height,\r\n    }\r\n\r\n    return sizes;\r\n  }\r\n}\r\n  \r\n  \r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}