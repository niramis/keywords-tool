{"ast":null,"code":"import _classCallCheck from\"G:\\\\kloud9\\\\dashboard-last\\\\trends-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\kloud9\\\\dashboard-last\\\\trends-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"G:\\\\kloud9\\\\dashboard-last\\\\trends-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"G:\\\\kloud9\\\\dashboard-last\\\\trends-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"G:\\\\kloud9\\\\dashboard-last\\\\trends-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{capitalizeString}from'../utils/functions';export var Legend=/*#__PURE__*/function(_React$PureComponent){_inherits(Legend,_React$PureComponent);function Legend(props){_classCallCheck(this,Legend);return _possibleConstructorReturn(this,_getPrototypeOf(Legend).call(this,props));}_createClass(Legend,[{key:\"render\",value:function render(){return React.createElement(\"g\",null,prepare_legend(this.props.dimensions,this.props.colors,this.props.keywords));}}]);return Legend;}(React.PureComponent);export default Legend;function prepare_legend(dimensions,colors,keywords){var legend=[];var keyword_sizes=[];if(dimensions.svg_width>700){for(var i=0;i<colors.length;i++){var l=calculate_translate_for_legend(keywords[i].length);var _translation=keyword_sizes.reduce(function(a,b){return a+b;},0);legend.push(React.createElement(\"g\",{key:i,\"data-z-index\":\"1\",transform:\"translate(\".concat(_translation,\",3)\")},React.createElement(\"path\",{fill:\"none\",d:\"M 0 11 L 30 11\",stroke:colors[i],strokeWidth:\"0\"}),React.createElement(\"text\",{x:\"35\",textAnchor:\"start\",\"data-z-index\":\"0\",y:\"15\",fontSize:\"12px\",stroke:\"#6c757d\",strokeWidth:\"0\"},capitalizeString(keywords[i]))));keyword_sizes.push(l);}var translation=keyword_sizes.reduce(function(a,b){return a+b;},0);var width_trans=dimensions.svg_width/2-translation/2-dimensions.x_trans;var height_trans=dimensions.height+dimensions.y_trans/2;height_trans=dimensions.height+dimensions.y_trans-dimensions.y_trans_bottom;height_trans=dimensions.height+dimensions.y_trans-25;return React.createElement(\"g\",{transform:\"translate(\".concat(width_trans,\", \").concat(height_trans,\")\"),className:\"plot_legend\"},legend);}else{for(var _i=0;_i<keywords.length;_i++){var _l=calculate_translate_for_legend(keywords[_i].length);keyword_sizes.push(_l);}for(var _i2=0;_i2<colors.length;_i2++){var trans=Math.max.apply(Math,keyword_sizes);legend.push(React.createElement(\"g\",{\"data-z-index\":\"1\",transform:\"translate(\".concat(dimensions.width/2-trans/2,\", \").concat(_i2*18+10,\")\")},React.createElement(\"path\",{fill:\"none\",d:\"M 0 11 L 30 11\",stroke:colors[_i2],\"stroke-width\":\"0\"}),React.createElement(\"text\",{x:\"35\",textAnchor:\"start\",\"data-z-index\":\"0\",y:\"15\",\"font-size\":\"12px\",stroke:\"#6c757d\",\"stroke-width\":\"0\"},capitalizeString(keywords[_i2]))));}var _height_trans=dimensions.height+43;return React.createElement(\"g\",{transform:\"translate(\".concat(0,\", \",_height_trans,\")\"),class:\"plot_legend\"},legend);}}function calculate_translate_for_legend(keyword_length){return(6,5)*keyword_length+55;}","map":{"version":3,"sources":["G:/kloud9/dashboard-last/trends-tool/client/src/components/plot/src/plot/parts/Legend.js"],"names":["React","capitalizeString","Legend","props","prepare_legend","dimensions","colors","keywords","PureComponent","legend","keyword_sizes","svg_width","i","length","l","calculate_translate_for_legend","translation","reduce","a","b","push","width_trans","x_trans","height_trans","height","y_trans","y_trans_bottom","trans","Math","max","width","keyword_length"],"mappings":"uqBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CAEA,UAAaC,CAAAA,MAAb,oFAEI,gBAAYC,KAAZ,CAAmB,uGACXA,KADW,GAElB,CAJL,0DAMa,CACL,MACI,8BAAKC,cAAc,CAAC,KAAKD,KAAL,CAAWE,UAAZ,CAAwB,KAAKF,KAAL,CAAWG,MAAnC,CAA2C,KAAKH,KAAL,CAAWI,QAAtD,CAAnB,CADJ,CAGH,CAVL,oBAA4BP,KAAK,CAACQ,aAAlC,EAaA,cAAeN,CAAAA,MAAf,CAIA,QAASE,CAAAA,cAAT,CAAwBC,UAAxB,CAAoCC,MAApC,CAA4CC,QAA5C,CAAsD,CAElD,GAAIE,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,aAAa,CAAG,EAApB,CAEA,GAAIL,UAAU,CAACM,SAAX,CAAqB,GAAzB,CAA8B,CAC1B,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAaA,CAAC,CAACN,MAAM,CAACO,MAAtB,CAA8BD,CAAC,EAA/B,CAAkC,CAC9B,GAAIE,CAAAA,CAAC,CAAGC,8BAA8B,CAACR,QAAQ,CAACK,CAAD,CAAR,CAAYC,MAAb,CAAtC,CAGA,GAAIG,CAAAA,YAAW,CAAGN,aAAa,CAACO,MAAd,CAAqB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAArB,CAAsC,CAAtC,CAAlB,CAEAV,MAAM,CAACW,IAAP,CACE,yBAAG,GAAG,CAAER,CAAR,CAAW,eAAa,GAAxB,CAA4B,SAAS,qBAAeI,YAAf,OAArC,EACI,4BAAM,IAAI,CAAC,MAAX,CAAkB,CAAC,CAAC,gBAApB,CAAqC,MAAM,CAAEV,MAAM,CAACM,CAAD,CAAnD,CAAwD,WAAW,CAAC,GAApE,EADJ,CAEI,4BAAM,CAAC,CAAC,IAAR,CAAa,UAAU,CAAC,OAAxB,CAAgC,eAAa,GAA7C,CAAiD,CAAC,CAAC,IAAnD,CAAwD,QAAQ,CAAC,MAAjE,CAAwE,MAAM,CAAC,SAA/E,CAAyF,WAAW,CAAC,GAArG,EAA0GX,gBAAgB,CAACM,QAAQ,CAACK,CAAD,CAAT,CAA1H,CAFJ,CADF,EAOAF,aAAa,CAACU,IAAd,CAAmBN,CAAnB,EACH,CAED,GAAIE,CAAAA,WAAW,CAAGN,aAAa,CAACO,MAAd,CAAqB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAArB,CAAsC,CAAtC,CAAlB,CACA,GAAIE,CAAAA,WAAW,CAAIhB,UAAU,CAACM,SAAZ,CAAuB,CAAvB,CAA2BK,WAAW,CAAC,CAAvC,CAA2CX,UAAU,CAACiB,OAAxE,CACA,GAAIC,CAAAA,YAAY,CAAGlB,UAAU,CAACmB,MAAX,CAAoBnB,UAAU,CAACoB,OAAX,CAAmB,CAA1D,CACAF,YAAY,CAAGlB,UAAU,CAACmB,MAAX,CAAoBnB,UAAU,CAACoB,OAA/B,CAAyCpB,UAAU,CAACqB,cAAnE,CACAH,YAAY,CAAGlB,UAAU,CAACmB,MAAX,CAAoBnB,UAAU,CAACoB,OAA/B,CAAyC,EAAxD,CAEA,MACI,0BAAG,SAAS,qBAAeJ,WAAf,cAA+BE,YAA/B,KAAZ,CAA4D,SAAS,CAAC,aAAtE,EACKd,MADL,CADJ,CAKH,CA5BD,IA4BO,CACH,IAAI,GAAIG,CAAAA,EAAC,CAAC,CAAV,CAAaA,EAAC,CAACL,QAAQ,CAACM,MAAxB,CAAgCD,EAAC,EAAjC,CAAoC,CAChC,GAAIE,CAAAA,EAAC,CAAGC,8BAA8B,CAACR,QAAQ,CAACK,EAAD,CAAR,CAAYC,MAAb,CAAtC,CACAH,aAAa,CAACU,IAAd,CAAmBN,EAAnB,EACH,CAED,IAAI,GAAIF,CAAAA,GAAC,CAAC,CAAV,CAAaA,GAAC,CAACN,MAAM,CAACO,MAAtB,CAA8BD,GAAC,EAA/B,CAAkC,CAE9B,GAAIe,CAAAA,KAAK,CAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,CAAQlB,aAAR,CAAhB,CAEAD,MAAM,CAACW,IAAP,CACA,yBAAG,eAAa,GAAhB,CAAoB,SAAS,qBAAgBf,UAAU,CAACyB,KAAZ,CAAmB,CAAnB,CAAuBH,KAAK,CAAC,CAA5C,cAAkDf,GAAC,CAAC,EAAF,CAAK,EAAvD,KAA7B,EACI,4BAAM,IAAI,CAAC,MAAX,CAAkB,CAAC,CAAC,gBAApB,CAAqC,MAAM,CAAEN,MAAM,CAACM,GAAD,CAAnD,CAAwD,eAAa,GAArE,EADJ,CAEI,4BAAM,CAAC,CAAC,IAAR,CAAa,UAAU,CAAC,OAAxB,CAAgC,eAAa,GAA7C,CAAiD,CAAC,CAAC,IAAnD,CAAwD,YAAU,MAAlE,CAAyE,MAAM,CAAC,SAAhF,CAA0F,eAAa,GAAvG,EAA4GX,gBAAgB,CAACM,QAAQ,CAACK,GAAD,CAAT,CAA5H,CAFJ,CADA,EAMH,CAED,GAAIW,CAAAA,aAAY,CAAGlB,UAAU,CAACmB,MAAX,CAAoB,EAAvC,CAEA,MACI,0BAAG,SAAS,qBAAe,CAAf,MAAqBD,aAArB,KAAZ,CAAkD,KAAK,CAAC,aAAxD,EACKd,MADL,CADJ,CAIH,CACJ,CAED,QAASM,CAAAA,8BAAT,CAAwCgB,cAAxC,CAAuD,CACnD,MAAO,CAAC,EAAE,CAAH,EAAMA,cAAN,CAAuB,EAA9B,CACH","sourcesContent":["import React from 'react';\r\nimport { capitalizeString } from '../utils/functions';\r\n\r\nexport class Legend extends React.PureComponent {\t\r\n\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <g>{ prepare_legend(this.props.dimensions, this.props.colors, this.props.keywords) }</g>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Legend;\r\n\r\n\r\n\r\nfunction prepare_legend(dimensions, colors, keywords) {\r\n\r\n    let legend = [];\r\n    let keyword_sizes = []\r\n\r\n    if (dimensions.svg_width>700) {\r\n        for(let i=0; i<colors.length; i++){\r\n            let l = calculate_translate_for_legend(keywords[i].length);\r\n            \r\n    \r\n            let translation = keyword_sizes.reduce((a, b) => a + b, 0);\r\n    \r\n            legend.push(\r\n              <g key={i} data-z-index=\"1\" transform={`translate(${translation},3)`}>\r\n                  <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke={colors[i]} strokeWidth=\"0\"></path>\r\n                  <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" fontSize=\"12px\" stroke=\"#6c757d\" strokeWidth=\"0\">{capitalizeString(keywords[i])}</text>\r\n              </g>\r\n        );\r\n\r\n            keyword_sizes.push(l);\r\n        }\r\n\r\n        let translation = keyword_sizes.reduce((a, b) => a + b, 0);\r\n        let width_trans = (dimensions.svg_width)/2 - translation/2 - dimensions.x_trans;\r\n        let height_trans = dimensions.height + dimensions.y_trans/2;\r\n        height_trans = dimensions.height + dimensions.y_trans - dimensions.y_trans_bottom;\r\n        height_trans = dimensions.height + dimensions.y_trans - 25;\r\n    \r\n        return (\r\n            <g transform={`translate(${width_trans}, ${height_trans})`} className=\"plot_legend\" >\r\n                {legend}\r\n            </g>)\r\n        \r\n    } else {\r\n        for(let i=0; i<keywords.length; i++){\r\n            let l = calculate_translate_for_legend(keywords[i].length);\r\n            keyword_sizes.push(l);\r\n        }\r\n\r\n        for(let i=0; i<colors.length; i++){\r\n\r\n            let trans = Math.max(...keyword_sizes);\r\n    \r\n            legend.push(\r\n            <g data-z-index=\"1\" transform={`translate(${(dimensions.width)/2 - trans/2}, ${i*18+10})`}>\r\n                <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke={colors[i]} stroke-width=\"0\"></path>\r\n                <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"12px\" stroke=\"#6c757d\" stroke-width=\"0\">{capitalizeString(keywords[i])}</text>\r\n            </g>\r\n        );\r\n        }\r\n\r\n        let height_trans = dimensions.height + 43;\r\n    \r\n        return (\r\n            <g transform={`translate(${0}, ${height_trans})`} class=\"plot_legend\" >\r\n                {legend}\r\n            </g>)\r\n    }\r\n}\r\n\r\nfunction calculate_translate_for_legend(keyword_length){\r\n    return (6,5)*keyword_length + 55;\r\n}"]},"metadata":{},"sourceType":"module"}