{"ast":null,"code":"var _jsxFileName = \"G:\\\\kloud9\\\\dashboard-last\\\\keywords-tool\\\\client\\\\src\\\\components\\\\Input.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport { USA_STATES } from '../states.js';\nconst time_frames = [[0, \"Weekly\", \"today 5-y\"], [1, \"Daily\", \"today 12-m\"], [2, \"Hourly\", \"today 1-m\"]];\n\nclass InputComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.selectedState = this.selectedState.bind(this);\n    this.selectedTimeFrame = this.selectedTimeFrame.bind(this);\n    this.state = {\n      keywords: [],\n      selected_state_name: USA_STATES[0][0],\n      selected_time_frame: time_frames[0][2]\n    };\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    let keywords = this.arrayTrim(this.state.keywords);\n    let selectedState = this.state.selected_state_name;\n    let selectedTimeFrame = this.state.selected_time_frame;\n\n    if (selectedTimeFrame === time_frames[0][2]) {\n      if (keywords.length <= 5) {\n        this.props.callbackFromParent(keywords, selectedState, selectedTimeFrame);\n      } else {\n        this.props.errorTimeframeCallback(\"Too many keywords\");\n      }\n    } else {\n      this.props.errorTimeframeCallback(\"Incorrect Forecast Granularity\");\n    }\n  }\n\n  selectedState(event) {\n    this.setState({\n      selected_state_name: event.target.value.split(',')[0]\n    });\n  }\n\n  selectedTimeFrame(event) {\n    this.setState({\n      selected_time_frame: event.target.value.split(',')[2]\n    });\n  }\n\n  handleChange(event) {\n    let array = event.target.value.split(',');\n    this.setState({\n      keywords: array\n    });\n  }\n\n  arrayTrim(array) {\n    let result = array.map(function (el) {\n      return el.trim();\n    });\n    return result;\n  }\n\n  render() {\n    let namesList = USA_STATES.map(function (state) {\n      return React.createElement(\"option\", {\n        key: state[1],\n        value: state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, state[2]);\n    });\n    let time_framesList = time_frames.map(function (time_frame) {\n      return React.createElement(\"option\", {\n        key: time_frame[0],\n        value: time_frame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, time_frame[1]);\n    });\n    return React.createElement(\"div\", {\n      className: \"input_bar input-bar-item width100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleClick,\n      className: \"input_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      className: \"form-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"keyword_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-input-keywords-label col-form-label input_label\",\n      htmlFor: \"keywords_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Keywords\"), React.createElement(Form.Control, {\n      className: \"col-input-keywords\",\n      type: \"text\",\n      placeholder: \"Enter keywords\",\n      value: this.state.keywords,\n      onChange: this.handleChange,\n      id: \"keywords_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"timeframe_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-select-time col-form-label input_label\",\n      htmlFor: \"select_timeframe_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Forecast Granularity\"), React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: this.selectedTimeFrame,\n      id: \"select_timeframe_input\",\n      className: \"col-input-timeframe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, time_framesList)))), React.createElement(\"div\", {\n      className: \"state_select_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-select-state col-form-label input_label\",\n      htmlFor: \"select_state_input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Location Granularity\"), React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: this.selectedState,\n      id: \"select_state_input\",\n      className: \"col-input-state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, namesList), React.createElement(\"div\", {\n      className: \"input_button col-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      className: \"btn-blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Submit\"))))))));\n  }\n\n}\n\nexport default InputComponent;","map":{"version":3,"sources":["G:/kloud9/dashboard-last/keywords-tool/client/src/components/Input.js"],"names":["React","Component","Form","Button","USA_STATES","time_frames","InputComponent","constructor","props","handleClick","bind","handleChange","selectedState","selectedTimeFrame","state","keywords","selected_state_name","selected_time_frame","event","preventDefault","arrayTrim","length","callbackFromParent","errorTimeframeCallback","setState","target","value","split","array","result","map","el","trim","render","namesList","time_framesList","time_frame"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { USA_STATES } from '../states.js';\r\n\r\nconst time_frames = [\r\n    [0, \"Weekly\", \"today 5-y\"],\r\n    [1, \"Daily\", \"today 12-m\"],\r\n    [2, \"Hourly\", \"today 1-m\"],\r\n]\r\n\r\nclass InputComponent extends Component {\t\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.selectedState = this.selectedState.bind(this);\r\n        this.selectedTimeFrame = this.selectedTimeFrame.bind(this);\r\n        this.state = {\r\n            keywords: [],\r\n            selected_state_name: USA_STATES[0][0],\r\n            selected_time_frame: time_frames[0][2]\r\n        };\r\n    }\r\n\r\n    handleClick(event){\r\n        event.preventDefault();\r\n\r\n        let keywords = this.arrayTrim(this.state.keywords);\r\n        let selectedState = this.state.selected_state_name;\r\n        let selectedTimeFrame = this.state.selected_time_frame;\r\n\r\n        if (selectedTimeFrame === time_frames[0][2]) {\r\n            if (keywords.length<=5) {\r\n                this.props.callbackFromParent(keywords, selectedState, selectedTimeFrame);    \r\n            } else {\r\n                this.props.errorTimeframeCallback(\"Too many keywords\")    \r\n            }\r\n            \r\n        } else {\r\n            this.props.errorTimeframeCallback(\"Incorrect Forecast Granularity\")\r\n        }\r\n    }\r\n\r\n    selectedState(event){\r\n        this.setState({\r\n            selected_state_name: event.target.value.split(',')[0]\r\n        });\r\n    }\r\n\r\n    selectedTimeFrame(event){\r\n        this.setState({\r\n            selected_time_frame: event.target.value.split(',')[2]\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n\r\n        let array = event.target.value.split(',')\r\n\r\n        this.setState({\r\n            keywords: array,\r\n        });\r\n    }\r\n\r\n    arrayTrim(array){\r\n        let result = array.map(function (el) {\r\n            return el.trim();\r\n        });\r\n\r\n        return result;\r\n    }\r\n    \r\n    render() {\r\n        let namesList = USA_STATES.map(function(state){\r\n            return <option key={state[1]} value={state}>{state[2]}</option>;\r\n        })\r\n\r\n        let time_framesList = time_frames.map(function(time_frame){\r\n            return <option key={time_frame[0]} value={time_frame}>{time_frame[1]}</option>;\r\n        })\r\n\r\n        return (\r\n            <div className=\"input_bar input-bar-item width100\">\r\n                <Form onSubmit={this.handleClick} className=\"input_form\">\r\n                    <Form.Group className=\"form-inline\">\r\n                        <div className=\"keyword_div\"> \r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-row\">\r\n                                    <label className=\"col-input-keywords-label col-form-label input_label\" htmlFor=\"keywords_input\">Keywords</label>\r\n                                    <Form.Control className=\"col-input-keywords\" type=\"text\" placeholder=\"Enter keywords\" value={this.state.keywords} onChange={this.handleChange} id=\"keywords_input\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"timeframe_div\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-row\">\r\n                                    <label className=\"label-select-time col-form-label input_label\" htmlFor=\"select_timeframe_input\">Forecast Granularity</label>\r\n                                    <Form.Control as=\"select\" onChange={this.selectedTimeFrame}  id=\"select_timeframe_input\" className=\"col-input-timeframe\">\r\n                                        {time_framesList}\r\n                                    </Form.Control>   \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"state_select_div\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-row\">\r\n                                    {/* <div> */}\r\n                                    {/* <div className=\"input-field\"> */}\r\n                                        <label className=\"label-select-state col-form-label input_label\" htmlFor=\"select_state_input\">Location Granularity</label>\r\n                                    \r\n                                        <Form.Control as=\"select\" onChange={this.selectedState}  id=\"select_state_input\" className=\"col-input-state\">\r\n                                            {namesList}\r\n                                        </Form.Control>                                \r\n                                        <div className=\"input_button col-button\">\r\n                                            <Button variant=\"primary\" type=\"submit\" className=\"btn-blue\">Submit</Button>\r\n                                        </div> \r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default InputComponent\r\n"]},"metadata":{},"sourceType":"module"}