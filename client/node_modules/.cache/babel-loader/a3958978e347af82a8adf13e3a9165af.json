{"ast":null,"code":"import _classCallCheck from\"G:\\\\kloud9\\\\dashboard-last\\\\keywords-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\kloud9\\\\dashboard-last\\\\keywords-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"G:\\\\kloud9\\\\dashboard-last\\\\keywords-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"G:\\\\kloud9\\\\dashboard-last\\\\keywords-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"G:\\\\kloud9\\\\dashboard-last\\\\keywords-tool\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';export var Area_Path=/*#__PURE__*/function(_React$PureComponent){_inherits(Area_Path,_React$PureComponent);function Area_Path(props){_classCallCheck(this,Area_Path);return _possibleConstructorReturn(this,_getPrototypeOf(Area_Path).call(this,props));}_createClass(Area_Path,[{key:\"render\",value:function render(){if(this.props.style===\"dash\"){return React.createElement(\"g\",null,area_path(this.props.data,this.props.color,4));}else{return React.createElement(\"g\",null,area_path(this.props.data,this.props.color,0,this.props.slice));}}}]);return Area_Path;}(React.PureComponent);export default Area_Path;////////////////\nvar svgPath=function svgPath(points,command,color,dash){var d=points.reduce(function(acc,point,i,a){return i===0?\"M \".concat(point[0],\",\").concat(point[2]):\"\".concat(acc,\" \").concat(bezierCommand(point,i,a));},'');return React.createElement(\"path\",{d:d,fill:\"none\",key:color,stroke:color,strokeWidth:\"2\",\"data-z-index\":\"0\",strokeDasharray:dash,pointerEvents:\"none\"});};var areaPath=function areaPath(points,command,color){var d1=points.reduce(function(acc,point,i,a){return i===0?\"M \".concat(point[0],\",\").concat(point[4]):\"\".concat(acc,\" \").concat(bezierCommand_upper(point,i,a));},'');d1+=\" L \".concat(points[points.length-1][0],\" \").concat(points[points.length-1][3],\"  \");var d3=points.reverse().reduce(function(acc,point,i,a){return i===0?\"L \".concat(point[0],\",\").concat(point[3]):\"\".concat(acc,\" \").concat(bezierCommand_lower(point,i,a));},'');d3+=\" L \".concat(points[points.length-1][0],\" \").concat(points[points.length-1][4],\"  \");var d=d1+d3;//////////////////////////////////////////\nreturn React.createElement(\"path\",{d:d,fill:color,stroke:color,strokeWidth:\"2\",\"data-z-index\":\"0\",pointerEvents:\"none\",opacity:\"0.35\"});};var lineCommand=function lineCommand(point){return\"L \".concat(point[0],\" \").concat(point[2]);};export function area_path(data,color){var dash=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var slice=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;var result=[];result.push(svgPath(data,lineCommand,color,dash));result.push(areaPath(data.slice(slice),bezierCommand,color));return result;}////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// The smoothing ratio\nvar smoothing=0.2;// Properties of a line \n// I:  - pointA (array) [x,y]: coordinates\n//     - pointB (array) [x,y]: coordinates\n// O:  - (object) { length: l, angle: a }: properties of the line\nvar line=function line(pointA,pointB){var lengthX=pointB[0]-pointA[0];var lengthY=pointB[2]-pointA[2];return{length:Math.sqrt(Math.pow(lengthX,2)+Math.pow(lengthY,2)),angle:Math.atan2(lengthY,lengthX)};};// Position of a control point \n// I:  - current (array) [x, y]: current point coordinates\n//     - previous (array) [x, y]: previous point coordinates\n//     - next (array) [x, y]: next point coordinates\n//     - reverse (boolean, optional): sets the direction\n// O:  - (array) [x,y]: a tuple of coordinates\nvar controlPoint=function controlPoint(current,previous,next,reverse){// When 'current' is the first or last point of the array\n// 'previous' or 'next' don't exist.\n// Replace with 'current'\nvar p=previous||current;var n=next||current;// Properties of the opposed-line\nvar o=line(p,n);// If is end-control-point, add PI to the angle to go backward\nvar angle=o.angle+(reverse?Math.PI:0);var length=o.length*smoothing;// The control point position is relative to the current point\nvar x=current[0]+Math.cos(angle)*length;var y=current[2]+Math.sin(angle)*length;return[x,y];};// Create the bezier curve command \n// I:  - point (array) [x,y]: current point coordinates\n//     - i (integer): index of 'point' in the array 'a'\n//     - a (array): complete array of points coordinates\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\nvar bezierCommand=function bezierCommand(point,i,a){// start control point\nvar cps=controlPoint(a[i-1],a[i-2],point);// end control point\nvar cpe=controlPoint(point,a[i-1],a[i+1],true);return\"C \".concat(cps[0],\",\").concat(cps[1],\" \").concat(cpe[0],\",\").concat(cpe[1],\" \").concat(point[0],\",\").concat(point[2]);};var bezierCommand_upper=function bezierCommand_upper(point,i,a){// start control point\nvar cps=controlPoint_upper(a[i-1],a[i-2],point);// if(point[4]<0){\n//   console.log(point[0]+ \": \" +point[1] + \" : \" + point[4])\n// }\n// end control point\nvar cpe=controlPoint_upper(point,a[i-1],a[i+1],true);return\"C \".concat(cps[0],\",\").concat(cps[1],\" \").concat(cpe[0],\",\").concat(cpe[1],\" \").concat(point[0],\",\").concat(point[4]);};var bezierCommand_lower=function bezierCommand_lower(point,i,a){// start control point\nvar cps=controlPoint_lower(a[i-1],a[i-2],point);// end control point\nvar cpe=controlPoint_lower(point,a[i-1],a[i+1],true);return\"C \".concat(cps[0],\",\").concat(cps[1],\" \").concat(cpe[0],\",\").concat(cpe[1],\" \").concat(point[0],\",\").concat(point[3]);};var line_lower=function line_lower(pointA,pointB){var lengthX=pointB[0]-pointA[0];var lengthY=pointB[3]-pointA[3];return{length:Math.sqrt(Math.pow(lengthX,2)+Math.pow(lengthY,2)),angle:Math.atan2(lengthY,lengthX)};};var line_upper=function line_upper(pointA,pointB){var lengthX=pointB[0]-pointA[0];var lengthY=pointB[4]-pointA[4];return{length:Math.sqrt(Math.pow(lengthX,2)+Math.pow(lengthY,2)),angle:Math.atan2(lengthY,lengthX)};};var controlPoint_lower=function controlPoint_lower(current,previous,next,reverse){// When 'current' is the first or last point of the array\n// 'previous' or 'next' don't exist.\n// Replace with 'current'\nvar p=previous||current;var n=next||current;// Properties of the opposed-line\nvar o=line_lower(p,n);// If is end-control-point, add PI to the angle to go backward\nvar angle=o.angle+(reverse?Math.PI:0);var length=o.length*smoothing;// The control point position is relative to the current point\nvar x=current[0]+Math.cos(angle)*length;var y=current[3]+Math.sin(angle)*length;return[x,y];};var controlPoint_upper=function controlPoint_upper(current,previous,next,reverse){// When 'current' is the first or last point of the array\n// 'previous' or 'next' don't exist.\n// Replace with 'current'\nvar p=previous||current;var n=next||current;// Properties of the opposed-line\nvar o=line_upper(p,n);// If is end-control-point, add PI to the angle to go backward\nvar angle=o.angle+(reverse?Math.PI:0);var length=o.length*smoothing;// The control point position is relative to the current point\nvar x=current[0]+Math.cos(angle)*length;var y=current[4]+Math.sin(angle)*length;return[x,y];};","map":{"version":3,"sources":["G:/kloud9/dashboard-last/keywords-tool/client/src/components/plot/src/plot/parts/Area_Path.js"],"names":["React","Area_Path","props","style","area_path","data","color","slice","PureComponent","svgPath","points","command","dash","d","reduce","acc","point","i","a","bezierCommand","areaPath","d1","bezierCommand_upper","length","d3","reverse","bezierCommand_lower","lineCommand","result","push","smoothing","line","pointA","pointB","lengthX","lengthY","Math","sqrt","pow","angle","atan2","controlPoint","current","previous","next","p","n","o","PI","x","cos","y","sin","cps","cpe","controlPoint_upper","controlPoint_lower","line_lower","line_upper"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nexport class Area_Path extends React.PureComponent {\t\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    if(this.props.style === \"dash\"){\r\n      return (\r\n        <g>{area_path(this.props.data, this.props.color, 4)}</g>\r\n      );\r\n    } else {\r\n      return (\r\n        <g>{area_path(this.props.data, this.props.color, 0, this.props.slice)}</g>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Area_Path\r\n\r\n\r\n\r\n////////////////\r\n\r\nconst svgPath = (points, command, color, dash) => {\r\n\r\n  const d = points.reduce((acc, point, i, a) => i === 0\r\n  ? `M ${point[0]},${point[2]}`\r\n  : `${acc} ${bezierCommand(point, i, a)}`\r\n  , '')\r\n\r\n  return <path d={d} fill=\"none\" key={color} stroke={color} strokeWidth=\"2\" data-z-index=\"0\" strokeDasharray={dash} pointerEvents=\"none\" />\r\n}\r\n\r\nconst areaPath = (points, command, color) => {\r\n\r\n  let d1 = points.reduce((acc, point, i, a) => i === 0\r\n  ? `M ${point[0]},${point[4]}`\r\n  : `${acc} ${bezierCommand_upper(point, i, a)}`\r\n  , '');\r\n\r\n\r\n\r\n  d1 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][3]}  `;\r\n\r\n  let d3 = points.reverse().reduce((acc, point, i, a) => i === 0\r\n  ? `L ${point[0]},${point[3]}`\r\n  : `${acc} ${bezierCommand_lower(point, i, a)}`\r\n  , '');\r\n\r\n\r\n  d3 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][4]}  `;\r\n\r\n  let d = d1 + d3;\r\n//////////////////////////////////////////\r\n\r\n  return <path d={d} fill={color} stroke={color} strokeWidth=\"2\" data-z-index=\"0\" pointerEvents=\"none\" opacity=\"0.35\" />\r\n}\r\n\r\n\r\n\r\nconst lineCommand = point => `L ${point[0]} ${point[2]}`\r\n\r\n    \r\nexport function area_path(data, color, dash=0, slice=0){\r\n\r\n\r\n    let result = [];\r\n    result.push(svgPath(data, lineCommand, color, dash));\r\n    result.push(areaPath(data.slice(slice), bezierCommand, color));\r\n\r\n    return result;\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// The smoothing ratio\r\nconst smoothing = 0.2\r\n\r\n\r\n// Properties of a line \r\n// I:  - pointA (array) [x,y]: coordinates\r\n//     - pointB (array) [x,y]: coordinates\r\n// O:  - (object) { length: l, angle: a }: properties of the line\r\nconst line = (pointA, pointB) => {\r\n  const lengthX = pointB[0] - pointA[0]\r\n  const lengthY = pointB[2] - pointA[2]\r\n  return {\r\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\r\n    angle: Math.atan2(lengthY, lengthX)\r\n  }\r\n}\r\n\r\n// Position of a control point \r\n// I:  - current (array) [x, y]: current point coordinates\r\n//     - previous (array) [x, y]: previous point coordinates\r\n//     - next (array) [x, y]: next point coordinates\r\n//     - reverse (boolean, optional): sets the direction\r\n// O:  - (array) [x,y]: a tuple of coordinates\r\nconst controlPoint = (current, previous, next, reverse) => {\r\n\r\n  // When 'current' is the first or last point of the array\r\n  // 'previous' or 'next' don't exist.\r\n  // Replace with 'current'\r\n  const p = previous || current\r\n  const n = next || current\r\n\r\n  // Properties of the opposed-line\r\n  const o = line(p, n)\r\n\r\n  // If is end-control-point, add PI to the angle to go backward\r\n  const angle = o.angle + (reverse ? Math.PI : 0)\r\n  const length = o.length * smoothing\r\n\r\n  // The control point position is relative to the current point\r\n  const x = current[0] + Math.cos(angle) * length\r\n  const y = current[2] + Math.sin(angle) * length\r\n  return [x, y]\r\n}\r\n\r\n// Create the bezier curve command \r\n// I:  - point (array) [x,y]: current point coordinates\r\n//     - i (integer): index of 'point' in the array 'a'\r\n//     - a (array): complete array of points coordinates\r\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\r\nconst bezierCommand = (point, i, a) => {\r\n\r\n  // start control point\r\n  const cps = controlPoint(a[i - 1], a[i - 2], point)\r\n\r\n  // end control point\r\n  const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\r\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[2]}`\r\n}\r\n\r\n\r\nconst bezierCommand_upper = (point, i, a) => {\r\n\r\n  // start control point\r\n  const cps = controlPoint_upper(a[i - 1], a[i - 2], point)\r\n\r\n  // if(point[4]<0){\r\n  //   console.log(point[0]+ \": \" +point[1] + \" : \" + point[4])\r\n  // }\r\n  // end control point\r\n  const cpe = controlPoint_upper(point, a[i - 1], a[i + 1], true)\r\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[4]}`\r\n}\r\n\r\nconst bezierCommand_lower = (point, i, a) => {\r\n\r\n  // start control point\r\n  const cps = controlPoint_lower(a[i - 1], a[i - 2], point)\r\n\r\n  // end control point\r\n  const cpe = controlPoint_lower(point, a[i - 1], a[i + 1], true)\r\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[3]}`\r\n}\r\n\r\n\r\nconst line_lower = (pointA, pointB) => {\r\n  const lengthX = pointB[0] - pointA[0]\r\n  const lengthY = pointB[3] - pointA[3]\r\n  return {\r\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\r\n    angle: Math.atan2(lengthY, lengthX)\r\n  }\r\n}\r\n\r\nconst line_upper = (pointA, pointB) => {\r\n  const lengthX = pointB[0] - pointA[0]\r\n  const lengthY = pointB[4] - pointA[4]\r\n  return {\r\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\r\n    angle: Math.atan2(lengthY, lengthX)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst controlPoint_lower = (current, previous, next, reverse) => {\r\n\r\n  // When 'current' is the first or last point of the array\r\n  // 'previous' or 'next' don't exist.\r\n  // Replace with 'current'\r\n  const p = previous || current\r\n  const n = next || current\r\n\r\n  // Properties of the opposed-line\r\n  const o = line_lower(p, n)\r\n\r\n  // If is end-control-point, add PI to the angle to go backward\r\n  const angle = o.angle + (reverse ? Math.PI : 0)\r\n  const length = o.length * smoothing\r\n\r\n  // The control point position is relative to the current point\r\n  const x = current[0] + Math.cos(angle) * length\r\n  const y = current[3] + Math.sin(angle) * length\r\n  return [x, y]\r\n}\r\n\r\nconst controlPoint_upper = (current, previous, next, reverse) => {\r\n\r\n  // When 'current' is the first or last point of the array\r\n  // 'previous' or 'next' don't exist.\r\n  // Replace with 'current'\r\n  const p = previous || current\r\n  const n = next || current\r\n\r\n  // Properties of the opposed-line\r\n  const o = line_upper(p, n)\r\n\r\n  // If is end-control-point, add PI to the angle to go backward\r\n  const angle = o.angle + (reverse ? Math.PI : 0)\r\n  const length = o.length * smoothing\r\n\r\n  // The control point position is relative to the current point\r\n  const x = current[0] + Math.cos(angle) * length\r\n  const y = current[4] + Math.sin(angle) * length\r\n  return [x, y]\r\n}"]},"metadata":{},"sourceType":"module"}