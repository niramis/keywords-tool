{"ast":null,"code":"export function add(a,b){return a+b;}// get random int\nexport function get_random(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min;}//get random double\nexport function get_random_double(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min;}export function get_random_array(size,min_x,max_x,min_y,max_y){var result=[];for(var i=0;i<size;i++){result.push([get_random(min_x,max_x),get_random(min_y,max_y)]);}return result;}export function get_random_area_array(size,min_x,max_x,min_y,max_y,s_dev){var result=[];for(var i=0;i<size;i++){var y=get_random(min_y,max_y);result.push([i,y-s_dev,y+s_dev,y]);}return result;}export function scale_data(data,ranges,width,height){var result=[];var x_diff=ranges.max_x-ranges.min_x;var y_diff=ranges.max_y-ranges.min_y;var x_frame=width/x_diff;var y_frame=height/y_diff;for(var i=0;i<data.length;i++){result.push([data[i][0]*x_frame,height-data[i][1]*y_frame]);}return result;}export function scale_area_data(area_data,ranges,width,height){var result=[];var x_diff=ranges.max_x-ranges.min_x;var y_diff=ranges.max_y-ranges.min_y;var x_frame=width/x_diff;var y_frame=height/y_diff;for(var i=0;i<area_data.length;i++){result.push([area_data[i][0]*x_frame,height-area_data[i][1]*y_frame,height-area_data[i][2]*y_frame,height-area_data[i][3]*y_frame]);}return result;}/////////////\n// MOCKED DATA\nexport function get_random_mock_array(size,min_x,max_x,min_y,max_y){var result=[];for(var i=min_x;i<=max_x;i++){result.push([i,get_random(min_y,max_y)]);}return result;}// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\nexport function get_random_colors(number){var colors=[\"#a2cd9f\",\"#6ef4ef\",\"#ea6e2e\",\"#6e224c\",\"#edfc35\",\"\",\"\"];return colors.slice(0,number);}export function get_box_height(number){if(number===0){return 0;}return 25*(number+1)+10;}///////////////////////////////\n// MOCKED DATA with DATES\nexport function get_random_mock_array_dates(dates,min_y,max_y){var result=[];for(var i=0;i<dates.length;i++){result.push([i,dates[i],get_random(min_y,max_y)]);}return result;}// export function get_random_mock_array_area_dates(dates, min_y, max_y){\n//     let result = [];\n//     let std\n//     for (let i=0; i<dates.length; i++){\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\n//     }\n//     return result;\n// }\nexport function scale_data_dates(data,ranges,width,height){var result=[];var x_diff=ranges.max_x-ranges.min_x;var y_diff=ranges.max_y-ranges.min_y;var x_frame=width/x_diff;var y_frame=height/y_diff;for(var i=0;i<data.length;i++){result.push([data[i][0]*x_frame,data[i][1],height-data[i][2]*y_frame]);}return result;}export function scale_data_area_dates(data,ranges,width,height){var prefix=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var result=[];var x_diff=Math.abs(ranges.max_x-ranges.min_x);var y_diff=Math.abs(ranges.max_y-ranges.min_y);var x_frame=width/(x_diff-1);var y_frame=height/y_diff;for(var i=0;i<data.length;i++){result.push([(i+prefix)*x_frame,data[i][1],height-data[i][2]*y_frame+y_frame*ranges.min_y,height-data[i][3]*y_frame+y_frame*ranges.min_y,height-data[i][4]*y_frame+y_frame*ranges.min_y]);}return result;}export function get_random_mock_area_array_dates(dates,min_y,max_y){var result=[];for(var i=0;i<dates.length;i++){var s_d1=get_random(2,8);var s_d2=get_random(2,8);var random=get_random(min_y,max_y);result.push([i,dates[i],random,random-s_d1,random+s_d2]);}return result;}export function get_data_mocks_area_DATES(data_mocks_area_DATES1,data_mocks_area_DATES2,number){var result=[];for(var i=0;i<number;i++){result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]));}return result;}export function scale_data_mocks(data,ranges,width,height){var scaled_data_mocks_area_DATES=[];var scaled_data_mocks_area_future_DATES=[];var number_of_plots=data.historical_data.length;for(var i=0;i<number_of_plots;i++){scaled_data_mocks_area_DATES.push(scale_data_area_dates(data.historical_data[i],ranges,width,height));scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data.forecasted_data[i],ranges,width,height,data.historical_data[i].length-1));}return[scaled_data_mocks_area_DATES,scaled_data_mocks_area_future_DATES];}export function get_data_map_area_DATES(data){var data_mocks_area_DATES=[];var number_of_series=data.historical_data.length;for(var i=0;i<number_of_series;i++){data_mocks_area_DATES.push(data.historical_data[i].concat(data.forecasted_data[i]));}var data_map_area_DATES=[];var counter=0;var data_length=data_mocks_area_DATES[0].length;for(var _i=0;_i<data_length;_i++){// for(let i = 0; i<array_length_dates -2; i++) {\nvar y_data_normal=[];var y_data_min=[];var y_data_max=[];var date=void 0;date=data_mocks_area_DATES[0][_i][1];for(var j=0;j<number_of_series;j++){y_data_normal.push(data_mocks_area_DATES[j][_i][2]);y_data_min.push(data_mocks_area_DATES[j][_i][3]);y_data_max.push(data_mocks_area_DATES[j][_i][4]);}data_map_area_DATES[_i]=[_i,date,y_data_normal,y_data_min,y_data_max];}return data_map_area_DATES;}export function capitalizeString(string){return titleCase(string);}function titleCase(str){var splitStr=str.toLowerCase().split(' ');for(var i=0;i<splitStr.length;i++){splitStr[i]=splitStr[i].charAt(0).toUpperCase()+splitStr[i].substring(1);}return splitStr.join(' ');}// export function get_historical_dates(){\n//     let dates = []\n//     dates.push(Date.UTC(2010, 0, 18))\n//     dates.push(Date.UTC(2010, 1, 18))\n//     dates.push( Date.UTC(2010, 2, 18))\n//     dates.push(Date.UTC(2010, 3, 18))\n//     dates.push( Date.UTC(2010, 4, 18))\n//     dates.push( Date.UTC(2010, 5, 18))\n//     dates.push( Date.UTC(2010, 6, 18))\n//     dates.push( Date.UTC(2010, 7, 18))\n//     // dates.push(Date.UTC(2010, 8, 18))\n//     // dates.push( Date.UTC(2010, 9, 18))\n//     // dates.push( Date.UTC(2010, 10, 18))\n//     return dates;\n// }\n// export function get_forecasted_dates(){\n//     let dates = []\n//     // dates.push( Date.UTC(2010, 7, 18))\n//     dates.push(Date.UTC(2010, 8, 18))\n//     dates.push( Date.UTC(2010, 9, 18))\n//     return dates;\n// }\nexport function get_min_value(data){var min_result=100;for(var i=0;i<data.length;i++){for(var j=0;j<data[i].length-2;j++){if(data[i][j][3]!==null&&data[i][j][3]<min_result){min_result=data[i][j][3];}}}return min_result;}export function get_max_value(data){var max_result=0;for(var i=0;i<data.length;i++){for(var j=0;j<data[i].length-2;j++){if(data[i][j][4]!==null&&data[i][j][4]>max_result){max_result=data[i][j][4];}}}return max_result;}","map":{"version":3,"sources":["G:/kloud9/dashboard-last/trends-tool/client/src/components/plot/src/plot/utils/functions.js"],"names":["add","a","b","get_random","min","max","Math","ceil","floor","random","get_random_double","get_random_array","size","min_x","max_x","min_y","max_y","result","i","push","get_random_area_array","s_dev","y","scale_data","data","ranges","width","height","x_diff","y_diff","x_frame","y_frame","length","scale_area_data","area_data","get_random_mock_array","get_random_colors","number","colors","slice","get_box_height","get_random_mock_array_dates","dates","scale_data_dates","scale_data_area_dates","prefix","abs","get_random_mock_area_array_dates","s_d1","s_d2","get_data_mocks_area_DATES","data_mocks_area_DATES1","data_mocks_area_DATES2","concat","scale_data_mocks","scaled_data_mocks_area_DATES","scaled_data_mocks_area_future_DATES","number_of_plots","historical_data","forecasted_data","get_data_map_area_DATES","data_mocks_area_DATES","number_of_series","data_map_area_DATES","counter","data_length","y_data_normal","y_data_min","y_data_max","date","j","capitalizeString","string","titleCase","str","splitStr","toLowerCase","split","charAt","toUpperCase","substring","join","get_min_value","min_result","get_max_value","max_result"],"mappings":"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","sourcesContent":["\r\n\r\nexport function add(a, b){\r\n    return a + b;\r\n}\r\n\r\n// get random int\r\nexport function get_random(min, max){\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n//get random double\r\nexport function get_random_double(min, max){\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\r\n    let result = [];\r\n\r\n    for (let i=0;i< size; i++){\r\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\r\n    let result = [];\r\n\r\n    for (let i=0;i< size; i++){\r\n        let y = get_random(min_y, max_y);\r\n        result.push([i, y - s_dev, y + s_dev, y])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function scale_data(data, ranges ,width, height){\r\n    let result = [];\r\n\r\n    let x_diff = ranges.max_x - ranges.min_x;\r\n    let y_diff = ranges.max_y - ranges.min_y;\r\n\r\n    let x_frame = width/x_diff;\r\n    let y_frame = height/y_diff;\r\n\r\n    for (let i=0; i<data.length; i++){\r\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function scale_area_data(area_data, ranges, width, height){\r\n    let result = [];\r\n\r\n    let x_diff = ranges.max_x - ranges.min_x;\r\n    let y_diff = ranges.max_y - ranges.min_y;\r\n\r\n    let x_frame = width/x_diff;\r\n    let y_frame = height/y_diff;\r\n\r\n    for (let i=0; i<area_data.length; i++){\r\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\n/////////////\r\n// MOCKED DATA\r\n\r\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\r\n    let result = [];\r\n\r\n    for (let i=min_x; i<=max_x; i++){\r\n        result.push([i, get_random(min_y, max_y)])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\n// /// RANDOM COLOR\r\n// export function random_rgba() {\r\n//     var o = Math.round, r = Math.random, s = 123;\r\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\r\n// }\r\n\r\n\r\nexport function get_random_colors(number) {\r\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\r\n\r\n    return colors.slice(0, number);\r\n}\r\n\r\nexport function get_box_height(number){\r\n    if (number === 0){\r\n        return 0;\r\n    }\r\n    return 25*(number + 1) + 10;\r\n}\r\n\r\n\r\n///////////////////////////////\r\n// MOCKED DATA with DATES\r\n\r\n\r\nexport function get_random_mock_array_dates(dates, min_y, max_y){\r\n    let result = [];\r\n\r\n    for (let i=0; i<dates.length; i++){\r\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n// export function get_random_mock_array_area_dates(dates, min_y, max_y){\r\n//     let result = [];\r\n//     let std\r\n\r\n//     for (let i=0; i<dates.length; i++){\r\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\r\n//     }\r\n\r\n//     return result;\r\n// }\r\n\r\nexport function scale_data_dates(data, ranges ,width, height){\r\n    let result = [];\r\n\r\n    let x_diff = ranges.max_x - ranges.min_x;\r\n    let y_diff = ranges.max_y - ranges.min_y;\r\n\r\n    let x_frame = width/x_diff;\r\n    let y_frame = height/y_diff;\r\n\r\n    for (let i=0; i<data.length; i++){\r\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\r\n    let result = [];\r\n    let x_diff = Math.abs(ranges.max_x - ranges.min_x);\r\n    let y_diff = Math.abs(ranges.max_y - ranges.min_y);\r\n    \r\n    let x_frame = width/(x_diff - 1);\r\n    let y_frame = height/y_diff;\r\n\r\n    for (let i=0; i<data.length; i++){\r\n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y), height - data[i][3] * y_frame + y_frame*(ranges.min_y), height - data[i][4] * y_frame + y_frame*(ranges.min_y)])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\r\n    let result = [];\r\n    \r\n\r\n\r\n\r\n    for (let i=0; i<dates.length; i++){\r\n        let s_d1 = get_random(2,8);\r\n        let s_d2 = get_random(2,8);\r\n        let random = get_random(min_y, max_y);\r\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\r\n    let result = []\r\n\r\n    for(let i=0;i<number;i++){\r\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nexport function scale_data_mocks(data, ranges, width, height){\r\n    let scaled_data_mocks_area_DATES = []\r\n    let scaled_data_mocks_area_future_DATES = []\r\n\r\n    let number_of_plots = data.historical_data.length\r\n\r\n    for (let i=0; i<number_of_plots; i++){\r\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data.historical_data[i], ranges, width, height));\r\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data.forecasted_data[i], ranges, width,  height, data.historical_data[i].length - 1));\r\n    }\r\n\r\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\r\n}\r\nexport function get_data_map_area_DATES(data) {\r\n    \r\n    let data_mocks_area_DATES = [];\r\n    let number_of_series = data.historical_data.length;\r\n    \r\n    for(let i=0;i<number_of_series;i++){\r\n        data_mocks_area_DATES.push(data.historical_data[i].concat(data.forecasted_data[i]))\r\n    }\r\n\r\n    let data_map_area_DATES = [];\r\n    \r\n    let counter = 0;\r\n    let data_length = data_mocks_area_DATES[0].length;\r\n\r\n    for(let i = 0; i<data_length; i++) {\r\n    // for(let i = 0; i<array_length_dates -2; i++) {\r\n        let y_data_normal = [];\r\n        let y_data_min = [];\r\n        let y_data_max = [];\r\n        let date;\r\n      \r\n        date = data_mocks_area_DATES[0][i][1]\r\n      \r\n        for(let j=0; j<number_of_series; j++) {\r\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\r\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\r\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\r\n        }\r\n      \r\n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\r\n    }\r\n\r\n    return data_map_area_DATES;\r\n}\r\n\r\nexport function capitalizeString(string) {\r\n    return titleCase(string);\r\n}\r\n\r\nfunction titleCase(str) {\r\n    var splitStr = str.toLowerCase().split(' ');\r\n    for (var i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \r\n    }\r\n    return splitStr.join(' '); \r\n }\r\n\r\n// export function get_historical_dates(){\r\n//     let dates = []\r\n//     dates.push(Date.UTC(2010, 0, 18))\r\n//     dates.push(Date.UTC(2010, 1, 18))\r\n//     dates.push( Date.UTC(2010, 2, 18))\r\n//     dates.push(Date.UTC(2010, 3, 18))\r\n//     dates.push( Date.UTC(2010, 4, 18))\r\n//     dates.push( Date.UTC(2010, 5, 18))\r\n//     dates.push( Date.UTC(2010, 6, 18))\r\n//     dates.push( Date.UTC(2010, 7, 18))\r\n//     // dates.push(Date.UTC(2010, 8, 18))\r\n//     // dates.push( Date.UTC(2010, 9, 18))\r\n//     // dates.push( Date.UTC(2010, 10, 18))\r\n    \r\n//     return dates;\r\n// }\r\n\r\n// export function get_forecasted_dates(){\r\n//     let dates = []\r\n//     // dates.push( Date.UTC(2010, 7, 18))\r\n//     dates.push(Date.UTC(2010, 8, 18))\r\n//     dates.push( Date.UTC(2010, 9, 18))\r\n\r\n//     return dates;\r\n\r\n// }\r\n\r\nexport function get_min_value(data){\r\n    let min_result = 100;\r\n\r\n    for(let i=0; i<data.length; i++){\r\n        for(let j=0;j<data[i].length-2; j++){\r\n            if(data[i][j][3]!==null && data[i][j][3] < min_result){\r\n                min_result = data[i][j][3]\r\n            }\r\n        }\r\n    }\r\n    return min_result\r\n}\r\n\r\nexport function get_max_value(data){\r\n    let max_result = 0;\r\n\r\n    for(let i=0; i<data.length; i++){\r\n        for(let j=0;j<data[i].length-2; j++){\r\n            if(data[i][j][4]!==null && data[i][j][4] > max_result){\r\n                max_result = data[i][j][4]\r\n            }\r\n        }\r\n    }\r\n    \r\n    return max_result\r\n}"]},"metadata":{},"sourceType":"module"}